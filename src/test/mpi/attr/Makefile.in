# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
master_top_srcdir  = @master_top_srcdir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_LINK         = $(CC)
LDFLAGS     =  @LDFLAGS@ ../util/mtest.o

VPATH = .:@srcdir@
INCLUDES = -I../include -I${srcdir}/../include

.SUFFIXES:
.SUFFIXES: .o .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../ \
	-configdir=test/mpi/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../ && \
	if [ -x config.status ] ; then CONFIG_FILES=attr/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean:  clean-local
	-@rm -f *.o ${srcdir}/*.o baseattrcomm attric attrerr baseattr2 keyval_double_free attrend fkeyvaltype attrend2 attrordertype attr2type attrt attrerrtype attrerrcomm fkeyvalcomm attrorder fkeyval attrordercomm
	-@rm -f baseattrcomm.exe attric.exe attrerr.exe baseattr2.exe keyval_double_free.exe attrend.exe fkeyvaltype.exe attrend2.exe attrordertype.exe attr2type.exe attrt.exe attrerrtype.exe attrerrcomm.exe fkeyvalcomm.exe attrorder.exe fkeyval.exe attrordercomm.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
	-@rm -f *.irlog*
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: attrt attrend attrend2 attric attrerr attrerrcomm attrerrtype\
	 attr2type attrorder attrordercomm attrordertype baseattr2\
	 baseattrcomm fkeyval fkeyvalcomm fkeyvaltype keyval_double_free

coverage: 
baseattrcomm: baseattrcomm.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o baseattrcomm baseattrcomm.o  \
	${LIBS} 
attric: attric.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attric attric.o  ${LIBS}
attrerr: attrerr.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrerr attrerr.o  ${LIBS}
baseattr2: baseattr2.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o baseattr2 baseattr2.o  ${LIBS}
keyval_double_free: keyval_double_free.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o keyval_double_free \
	keyval_double_free.o  ${LIBS} 
attrend: attrend.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrend attrend.o  ${LIBS}
fkeyvaltype: fkeyvaltype.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fkeyvaltype fkeyvaltype.o  ${LIBS}
attrend2: attrend2.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrend2 attrend2.o  ${LIBS}
attrordertype: attrordertype.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrordertype attrordertype.o  \
	${LIBS} 
attr2type: attr2type.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attr2type attr2type.o  ${LIBS}
attrt: attrt.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrt attrt.o  ${LIBS}
attrerrtype: attrerrtype.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrerrtype attrerrtype.o  ${LIBS}
attrerrcomm: attrerrcomm.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrerrcomm attrerrcomm.o  ${LIBS}
fkeyvalcomm: fkeyvalcomm.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fkeyvalcomm fkeyvalcomm.o  ${LIBS}
attrorder: attrorder.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrorder attrorder.o  ${LIBS}
fkeyval: fkeyval.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o fkeyval fkeyval.o  ${LIBS}
attrordercomm: attrordercomm.o   @MPILIBLOC@ ../util/mtest.o
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o attrordercomm attrordercomm.o  \
	${LIBS} 
# --------------------------------------------------------------------------
htmldoc:
mandoc:
latexdoc:
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dummy target
dependencies:

# --------------------------------------------------------------------------
SOURCES         =  attrt.c attrend.c attrend2.c attric.c attrerr.c \
	attrerrcomm.c attrerrtype.c attr2type.c attrorder.c attrordercomm.c \
	attrordertype.c baseattr2.c baseattrcomm.c fkeyval.c fkeyvalcomm.c \
	fkeyvaltype.c keyval_double_free.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------


../util/mtest.o:
	(cd ../util && $(MAKE) mtest.o)
testing:
	../runtests -srcdir=$(srcdir) -tests=testlist \
			-mpiexec=@MPIEXEC@ \
		   	-xmlfile=summary.xml
clean-local:
	-rm -f summary.xml


FORCE_TARGET:

