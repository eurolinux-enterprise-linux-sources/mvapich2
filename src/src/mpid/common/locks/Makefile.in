# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
HEADERS = mpidu_process_locks.h
INCLUDES = -I${srcdir} -I../../../include -I${master_top_srcdir}/src/include

.SUFFIXES:
.SUFFIXES: .o .lo .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

${srcdir}/mpid_locksconf.h  ${srcdir}/configure: ${srcdir}/configure.in 
	@rm -rf autom4te*.cache
	(cd ${srcdir} && autoheader -I ../../../../confdb && \
	autoconf -I \
	../../../../confdb ) 

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../../ \
	-configdir=src/mpid/common/locks/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile config.status config.log config.cache *conf.cache config.system" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-if [ -x config.status ] ; then CONFIG_FILES=Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 .libstamp2 .libstamp3 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f libmpich2locks.a
	-@rm -f libmpich2locks.la
	-@rm -f Makefile config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -f mpid_locksconf.h
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: .libstamp0 ../../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	    ${MAKE} libmpich2locks.la || exit 1; \
	fi

libmpich2locks.a: mpidu_process_locks.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr libmpich2locks.a $?" ; \
	else \
	  echo ${AR} cr libmpich2locks.a $? ; \
	fi
	@${AR} cr libmpich2locks.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          libmpich2locks.a" ; \
	else \
	  echo ${RANLIB} libmpich2locks.a ; \
	fi
	@${RANLIB} libmpich2locks.a
.libstamp0 ../../../../lib/lib${MPILIBNAME}.a: mpidu_process_locks.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
libmpich2locks.la: mpidu_process_locks.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr libmpich2locks.la $?" ; \
	else \
	  echo ${AR} cr libmpich2locks.la $? ; \
	fi
	@${AR} cr libmpich2locks.la $?
.libstamp1 ../../../../lib/lib${MPILIBNAME}.la: mpidu_process_locks.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
coverage: 
	-@for file in mpidu_process_locks.c ; do \
		gcov -b -f $$file ; done
	-@for file in mpidu_process_locks.c ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
htmldoc:
mandoc:
latexdoc:
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/mpidu_process_locks.d: $(srcdir)/mpidu_process_locks.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpidu_process_locks.c > $(DEPS_DIR)/mpidu_process_locks.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpidu_process_locks.c >$(DEPS_DIR)/mpidu_process_locks.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpidu_process_locks.c >$(DEPS_DIR)/mpidu_process_locks.d
$(DEPS_DIR)/timestamp: mpidu_process_locks.c mpidu_process_locks.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpidu_process_locks.c > $(DEPS_DIR)/mpidu_process_locks.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpidu_process_locks.c >$(DEPS_DIR)/mpidu_process_locks.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpidu_process_locks.c >$(DEPS_DIR)/mpidu_process_locks.d
	echo "include $(DEPS_DIR)/mpidu_process_locks.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  mpidu_process_locks.c mpidu_process_locks.c
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------

# Create a local library as an option

FORCE_TARGET:

