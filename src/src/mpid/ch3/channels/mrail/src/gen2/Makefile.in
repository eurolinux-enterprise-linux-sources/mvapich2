# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
CFLAGS = @CFLAGS@ -D_GNU_SOURCE
INCLUDES= -I@master_top_srcdir@/src/include -I../../../../../../include -I@master_top_srcdir@/src/mpid/ch3/channels/mrail/include/memory -I@master_top_srcdir@/src/mpid/ch3/channels/common/include -I../hwloc/include
VPATH = .:@srcdir@:@master_top_srcdir@/src/mpid/ch3/channels/common/src/memory:@master_top_srcdir@/src/mpid/ch3/channels/common/src/reg_cache:@master_top_srcdir@/src/mpid/ch3/channels/common/src/rdma_cm:@master_top_srcdir@/src/mpid/ch3/channels/common/src/detect/hca:@master_top_srcdir@/src/mpid/ch3/channels/common/src/detect/arch:@master_top_srcdir@/src/mpid/ch3/channels/common/src/memory/ptmalloc2:@master_top_srcdir@/src/mpid/ch3/channels/common/src/util/:@master_top_srcdir@/src/mpid/ch3/channels/common/src/qos

.SUFFIXES:
.SUFFIXES: .o .lo .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../../../../../ \
	-configdir=src/mpid/ch3/channels/mrail/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../../ && \
	if [ -x config.status ] ; then CONFIG_FILES=src/gen2/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect:
	${MAKE} all-local
all-local: .libstamp0 ../../../../../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	fi

.libstamp0 ../../../../../../../lib/lib${MPILIBNAME}.a: ibv_send.o ibv_recv.o \
	rdma_iba_init.o rdma_iba_priv.o dreg.o ibv_param.o vbuf.o \
	ibv_channel_manager.o ibv_rma.o rdma_iba_1sc.o ibv_rndv.o ibv_priv.o \
	avl.o cm.o rdma_cm.o cr.o crc32h.o ring_startup.o sysreport.o \
	mv2_arch_detect.o mv2_hca_detect.o mem_hooks.o mvapich_malloc.o \
	mv2_utils.o rdma_3dtorus.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../../../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../../../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../../../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../../../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../../../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../../../../../lib/lib${MPILIBNAME}.la: ibv_send.lo \
	ibv_recv.lo rdma_iba_init.lo rdma_iba_priv.lo dreg.lo ibv_param.lo \
	vbuf.lo ibv_channel_manager.lo ibv_rma.lo rdma_iba_1sc.lo ibv_rndv.lo \
	ibv_priv.lo avl.lo cm.lo rdma_cm.lo cr.lo crc32h.lo ring_startup.lo \
	sysreport.lo mv2_arch_detect.lo mv2_hca_detect.lo mem_hooks.lo \
	mvapich_malloc.lo mv2_utils.lo rdma_3dtorus.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../../../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../../../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../../../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
coverage: 
	-@for file in ibv_send.c ibv_recv.c rdma_iba_init.c rdma_iba_priv.c dreg.c \
	ibv_param.c vbuf.c ibv_channel_manager.c ibv_rma.c rdma_iba_1sc.c \
	ibv_rndv.c ibv_priv.c avl.c cm.c rdma_cm.c cr.c crc32h.c \
	ring_startup.c sysreport.c mv2_arch_detect.c mv2_hca_detect.c \
	mem_hooks.c mvapich_malloc.c mv2_utils.c rdma_3dtorus.c ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
htmldoc:
mandoc:
latexdoc:
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/ibv_send.d: $(srcdir)/ibv_send.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_send.c > $(DEPS_DIR)/ibv_send.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_send.c >$(DEPS_DIR)/ibv_send.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_send.c >$(DEPS_DIR)/ibv_send.d
$(DEPS_DIR)/ibv_recv.d: $(srcdir)/ibv_recv.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_recv.c > $(DEPS_DIR)/ibv_recv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_recv.c >$(DEPS_DIR)/ibv_recv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_recv.c >$(DEPS_DIR)/ibv_recv.d
$(DEPS_DIR)/rdma_iba_init.d: $(srcdir)/rdma_iba_init.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_iba_init.c > $(DEPS_DIR)/rdma_iba_init.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_init.c >$(DEPS_DIR)/rdma_iba_init.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_init.c >$(DEPS_DIR)/rdma_iba_init.d
$(DEPS_DIR)/rdma_iba_priv.d: $(srcdir)/rdma_iba_priv.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_iba_priv.c > $(DEPS_DIR)/rdma_iba_priv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_priv.c >$(DEPS_DIR)/rdma_iba_priv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_priv.c >$(DEPS_DIR)/rdma_iba_priv.d
$(DEPS_DIR)/dreg.d: dreg.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C dreg.c > $(DEPS_DIR)/dreg.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d ; \
	fi
	@$(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d
$(DEPS_DIR)/ibv_param.d: $(srcdir)/ibv_param.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_param.c > $(DEPS_DIR)/ibv_param.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_param.c >$(DEPS_DIR)/ibv_param.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_param.c >$(DEPS_DIR)/ibv_param.d
$(DEPS_DIR)/vbuf.d: $(srcdir)/vbuf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C vbuf.c > $(DEPS_DIR)/vbuf.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/vbuf.c >$(DEPS_DIR)/vbuf.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/vbuf.c >$(DEPS_DIR)/vbuf.d
$(DEPS_DIR)/ibv_channel_manager.d: $(srcdir)/ibv_channel_manager.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_channel_manager.c > $(DEPS_DIR)/ibv_channel_manager.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_channel_manager.c >$(DEPS_DIR)/ibv_channel_manager.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_channel_manager.c >$(DEPS_DIR)/ibv_channel_manager.d
$(DEPS_DIR)/ibv_rma.d: $(srcdir)/ibv_rma.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_rma.c > $(DEPS_DIR)/ibv_rma.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_rma.c >$(DEPS_DIR)/ibv_rma.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_rma.c >$(DEPS_DIR)/ibv_rma.d
$(DEPS_DIR)/rdma_iba_1sc.d: $(srcdir)/rdma_iba_1sc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_iba_1sc.c > $(DEPS_DIR)/rdma_iba_1sc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_1sc.c >$(DEPS_DIR)/rdma_iba_1sc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_1sc.c >$(DEPS_DIR)/rdma_iba_1sc.d
$(DEPS_DIR)/ibv_rndv.d: $(srcdir)/ibv_rndv.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_rndv.c > $(DEPS_DIR)/ibv_rndv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_rndv.c >$(DEPS_DIR)/ibv_rndv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_rndv.c >$(DEPS_DIR)/ibv_rndv.d
$(DEPS_DIR)/ibv_priv.d: $(srcdir)/ibv_priv.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_priv.c > $(DEPS_DIR)/ibv_priv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_priv.c >$(DEPS_DIR)/ibv_priv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_priv.c >$(DEPS_DIR)/ibv_priv.d
$(DEPS_DIR)/avl.d: avl.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C avl.c > $(DEPS_DIR)/avl.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d ; \
	fi
	@$(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d
$(DEPS_DIR)/cm.d: $(srcdir)/cm.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C cm.c > $(DEPS_DIR)/cm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/cm.c >$(DEPS_DIR)/cm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/cm.c >$(DEPS_DIR)/cm.d
$(DEPS_DIR)/rdma_cm.d: rdma_cm.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_cm.c > $(DEPS_DIR)/rdma_cm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  rdma_cm.c >$(DEPS_DIR)/rdma_cm.d ; \
	fi
	@$(MAKE_DEPEND_C)  rdma_cm.c >$(DEPS_DIR)/rdma_cm.d
$(DEPS_DIR)/cr.d: $(srcdir)/cr.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C cr.c > $(DEPS_DIR)/cr.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/cr.c >$(DEPS_DIR)/cr.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/cr.c >$(DEPS_DIR)/cr.d
$(DEPS_DIR)/crc32h.d: crc32h.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C crc32h.c > $(DEPS_DIR)/crc32h.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  crc32h.c >$(DEPS_DIR)/crc32h.d ; \
	fi
	@$(MAKE_DEPEND_C)  crc32h.c >$(DEPS_DIR)/crc32h.d
$(DEPS_DIR)/ring_startup.d: $(srcdir)/ring_startup.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ring_startup.c > $(DEPS_DIR)/ring_startup.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ring_startup.c >$(DEPS_DIR)/ring_startup.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ring_startup.c >$(DEPS_DIR)/ring_startup.d
$(DEPS_DIR)/sysreport.d: $(srcdir)/sysreport.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C sysreport.c > $(DEPS_DIR)/sysreport.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/sysreport.c >$(DEPS_DIR)/sysreport.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/sysreport.c >$(DEPS_DIR)/sysreport.d
$(DEPS_DIR)/mv2_arch_detect.d: mv2_arch_detect.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_arch_detect.c > $(DEPS_DIR)/mv2_arch_detect.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_arch_detect.c >$(DEPS_DIR)/mv2_arch_detect.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_arch_detect.c >$(DEPS_DIR)/mv2_arch_detect.d
$(DEPS_DIR)/mv2_hca_detect.d: mv2_hca_detect.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_hca_detect.c > $(DEPS_DIR)/mv2_hca_detect.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_hca_detect.c >$(DEPS_DIR)/mv2_hca_detect.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_hca_detect.c >$(DEPS_DIR)/mv2_hca_detect.d
$(DEPS_DIR)/mem_hooks.d: mem_hooks.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mem_hooks.c > $(DEPS_DIR)/mem_hooks.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d ; \
	fi
	@$(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d
$(DEPS_DIR)/mvapich_malloc.d: mvapich_malloc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mvapich_malloc.c > $(DEPS_DIR)/mvapich_malloc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d ; \
	fi
	@$(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d
$(DEPS_DIR)/mv2_utils.d: mv2_utils.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_utils.c > $(DEPS_DIR)/mv2_utils.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d
$(DEPS_DIR)/rdma_3dtorus.d: rdma_3dtorus.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_3dtorus.c > $(DEPS_DIR)/rdma_3dtorus.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d ; \
	fi
	@$(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d
$(DEPS_DIR)/timestamp: ibv_send.c ibv_recv.c rdma_iba_init.c rdma_iba_priv.c dreg.c ibv_param.c \
	vbuf.c ibv_channel_manager.c ibv_rma.c rdma_iba_1sc.c ibv_rndv.c \
	ibv_priv.c avl.c cm.c rdma_cm.c cr.c crc32h.c ring_startup.c \
	sysreport.c mv2_arch_detect.c mv2_hca_detect.c mem_hooks.c \
	mvapich_malloc.c mv2_utils.c rdma_3dtorus.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_send.c > $(DEPS_DIR)/ibv_send.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_send.c >$(DEPS_DIR)/ibv_send.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_send.c >$(DEPS_DIR)/ibv_send.d
	echo "include $(DEPS_DIR)/ibv_send.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_recv.c > $(DEPS_DIR)/ibv_recv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_recv.c >$(DEPS_DIR)/ibv_recv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_recv.c >$(DEPS_DIR)/ibv_recv.d
	echo "include $(DEPS_DIR)/ibv_recv.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_iba_init.c > $(DEPS_DIR)/rdma_iba_init.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_init.c >$(DEPS_DIR)/rdma_iba_init.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_init.c >$(DEPS_DIR)/rdma_iba_init.d
	echo "include $(DEPS_DIR)/rdma_iba_init.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_iba_priv.c > $(DEPS_DIR)/rdma_iba_priv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_priv.c >$(DEPS_DIR)/rdma_iba_priv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_priv.c >$(DEPS_DIR)/rdma_iba_priv.d
	echo "include $(DEPS_DIR)/rdma_iba_priv.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C dreg.c > $(DEPS_DIR)/dreg.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d ; \
	fi
	@$(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d
	echo "include $(DEPS_DIR)/dreg.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_param.c > $(DEPS_DIR)/ibv_param.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_param.c >$(DEPS_DIR)/ibv_param.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_param.c >$(DEPS_DIR)/ibv_param.d
	echo "include $(DEPS_DIR)/ibv_param.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C vbuf.c > $(DEPS_DIR)/vbuf.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/vbuf.c >$(DEPS_DIR)/vbuf.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/vbuf.c >$(DEPS_DIR)/vbuf.d
	echo "include $(DEPS_DIR)/vbuf.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_channel_manager.c > $(DEPS_DIR)/ibv_channel_manager.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_channel_manager.c >$(DEPS_DIR)/ibv_channel_manager.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_channel_manager.c >$(DEPS_DIR)/ibv_channel_manager.d
	echo "include $(DEPS_DIR)/ibv_channel_manager.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_rma.c > $(DEPS_DIR)/ibv_rma.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_rma.c >$(DEPS_DIR)/ibv_rma.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_rma.c >$(DEPS_DIR)/ibv_rma.d
	echo "include $(DEPS_DIR)/ibv_rma.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_iba_1sc.c > $(DEPS_DIR)/rdma_iba_1sc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_1sc.c >$(DEPS_DIR)/rdma_iba_1sc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/rdma_iba_1sc.c >$(DEPS_DIR)/rdma_iba_1sc.d
	echo "include $(DEPS_DIR)/rdma_iba_1sc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_rndv.c > $(DEPS_DIR)/ibv_rndv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_rndv.c >$(DEPS_DIR)/ibv_rndv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_rndv.c >$(DEPS_DIR)/ibv_rndv.d
	echo "include $(DEPS_DIR)/ibv_rndv.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ibv_priv.c > $(DEPS_DIR)/ibv_priv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ibv_priv.c >$(DEPS_DIR)/ibv_priv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ibv_priv.c >$(DEPS_DIR)/ibv_priv.d
	echo "include $(DEPS_DIR)/ibv_priv.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C avl.c > $(DEPS_DIR)/avl.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d ; \
	fi
	@$(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d
	echo "include $(DEPS_DIR)/avl.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C cm.c > $(DEPS_DIR)/cm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/cm.c >$(DEPS_DIR)/cm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/cm.c >$(DEPS_DIR)/cm.d
	echo "include $(DEPS_DIR)/cm.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_cm.c > $(DEPS_DIR)/rdma_cm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  rdma_cm.c >$(DEPS_DIR)/rdma_cm.d ; \
	fi
	@$(MAKE_DEPEND_C)  rdma_cm.c >$(DEPS_DIR)/rdma_cm.d
	echo "include $(DEPS_DIR)/rdma_cm.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C cr.c > $(DEPS_DIR)/cr.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/cr.c >$(DEPS_DIR)/cr.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/cr.c >$(DEPS_DIR)/cr.d
	echo "include $(DEPS_DIR)/cr.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C crc32h.c > $(DEPS_DIR)/crc32h.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  crc32h.c >$(DEPS_DIR)/crc32h.d ; \
	fi
	@$(MAKE_DEPEND_C)  crc32h.c >$(DEPS_DIR)/crc32h.d
	echo "include $(DEPS_DIR)/crc32h.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ring_startup.c > $(DEPS_DIR)/ring_startup.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ring_startup.c >$(DEPS_DIR)/ring_startup.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ring_startup.c >$(DEPS_DIR)/ring_startup.d
	echo "include $(DEPS_DIR)/ring_startup.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C sysreport.c > $(DEPS_DIR)/sysreport.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/sysreport.c >$(DEPS_DIR)/sysreport.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/sysreport.c >$(DEPS_DIR)/sysreport.d
	echo "include $(DEPS_DIR)/sysreport.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_arch_detect.c > $(DEPS_DIR)/mv2_arch_detect.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_arch_detect.c >$(DEPS_DIR)/mv2_arch_detect.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_arch_detect.c >$(DEPS_DIR)/mv2_arch_detect.d
	echo "include $(DEPS_DIR)/mv2_arch_detect.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_hca_detect.c > $(DEPS_DIR)/mv2_hca_detect.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_hca_detect.c >$(DEPS_DIR)/mv2_hca_detect.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_hca_detect.c >$(DEPS_DIR)/mv2_hca_detect.d
	echo "include $(DEPS_DIR)/mv2_hca_detect.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mem_hooks.c > $(DEPS_DIR)/mem_hooks.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d ; \
	fi
	@$(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d
	echo "include $(DEPS_DIR)/mem_hooks.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mvapich_malloc.c > $(DEPS_DIR)/mvapich_malloc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d ; \
	fi
	@$(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d
	echo "include $(DEPS_DIR)/mvapich_malloc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_utils.c > $(DEPS_DIR)/mv2_utils.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d
	echo "include $(DEPS_DIR)/mv2_utils.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_3dtorus.c > $(DEPS_DIR)/rdma_3dtorus.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d ; \
	fi
	@$(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d
	echo "include $(DEPS_DIR)/rdma_3dtorus.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  ibv_send.c ibv_recv.c rdma_iba_init.c rdma_iba_priv.c \
	dreg.c ibv_param.c vbuf.c ibv_channel_manager.c ibv_rma.c \
	rdma_iba_1sc.c ibv_rndv.c ibv_priv.c avl.c cm.c rdma_cm.c cr.c \
	crc32h.c ring_startup.c sysreport.c mv2_arch_detect.c \
	mv2_hca_detect.c mem_hooks.c mvapich_malloc.c mv2_utils.c \
	rdma_3dtorus.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------
# Copyright (c) 2003-2011, The Ohio State University. All rights
# reserved.
#
# This file is part of the MVAPICH2 software package developed by the
# team members of The Ohio State University's Network-Based Computing
# Laboratory (NBCL), headed by Professor Dhabaleswar K. (DK) Panda.
#
# For detailed copyright and licensing information, please refer to the
# copyright file COPYRIGHT in the top level MVAPICH2 directory.



FORCE_TARGET:

