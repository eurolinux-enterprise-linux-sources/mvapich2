# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
INCLUDES = -I. -I../../include -I../../../../../../../include -I@master_top_srcdir@/src/ch3/channels/nemesis/nemesis/include -I@master_top_srcdir@/src/include -I@top_builddir@/src/include -I@master_top_srcdir@/src/mpid/ch3/channels/common/include -I@master_top_srcdir@/src/mpid/ch3/channels/mrail/src/gen2
VPATH = .:@srcdir@:@master_top_srcdir@/src/mpid/ch3/channels/common/src/reg_cache:@master_top_srcdir@/src/mpid/ch3/channels/common/src/memory:@master_top_srcdir@/src/mpid/ch3/channels/common/src/memory/ptmalloc2:@master_top_srcdir@/src/mpid/ch3/channels/common/src/util:@master_top_srcdir@/src/mpid/ch3/channels/common/src/qos
DEFS = -DHAVE_CONFIG_H -I. -I@srcdir@ -DNEMESIS_BUILD

.SUFFIXES:
.SUFFIXES: .o .lo .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

${srcdir}/ib_conf.h  ${srcdir}/configure: ${srcdir}/configure.in 
	@rm -rf autom4te*.cache
	(cd ${srcdir} && autoheader -I ../../../../../../../../confdb && \
	autoconf \
	-I ../../../../../../../../confdb ) 

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../../../../../../ \
	-configdir=src/mpid/ch3/channels/nemesis/nemesis/netmod/ib/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile Makefile localdefs config.status config.log config.cache *conf.cache config.system" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-if [ -x config.status ] ; then CONFIG_FILES=Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile Makefile localdefs config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -f ib_conf.h
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: .libstamp0 ../../../../../../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	fi

.libstamp0 ../../../../../../../../lib/lib${MPILIBNAME}.a: ib_init.o \
	ib_ckpt_shutdown.o ib_connect_to_root.o ib_finalize.o ib_init.o \
	ib_poll.o ib_vc.o ib_send.o ib_param.o ib_cm.o ib_cell.o ib_hca.o \
	ib_process.o ib_vbuf.o ib_channel_manager.o ib_recv.o ib_srq.o \
	ib_ds_hash.o ib_ds_queue.o ib_errors.o ib_rdma.o ib_lmt_recv.o \
	ib_lmt_send.o dreg.o avl.o mem_hooks.o mvapich_malloc.o mv2_utils.o \
	rdma_3dtorus.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../../../../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../../../../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../../../../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../../../../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../../../../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../../../../../../lib/lib${MPILIBNAME}.la: ib_init.lo \
	ib_ckpt_shutdown.lo ib_connect_to_root.lo ib_finalize.lo ib_init.lo \
	ib_poll.lo ib_vc.lo ib_send.lo ib_param.lo ib_cm.lo ib_cell.lo \
	ib_hca.lo ib_process.lo ib_vbuf.lo ib_channel_manager.lo ib_recv.lo \
	ib_srq.lo ib_ds_hash.lo ib_ds_queue.lo ib_errors.lo ib_rdma.lo \
	ib_lmt_recv.lo ib_lmt_send.lo dreg.lo avl.lo mem_hooks.lo \
	mvapich_malloc.lo mv2_utils.lo rdma_3dtorus.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../../../../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../../../../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../../../../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
coverage: 
	-@for file in ib_init.c ib_ckpt_shutdown.c ib_connect_to_root.c \
	ib_finalize.c ib_init.c   ib_poll.c ib_vc.c ib_send.c ib_param.c \
	ib_cm.c ib_cell.c   ib_hca.c ib_process.c ib_vbuf.c \
	ib_channel_manager.c ib_recv.c ib_srq.c   ib_ds_hash.c ib_ds_queue.c \
	ib_errors.c ib_rdma.c ib_lmt_recv.c ib_lmt_send.c   dreg.c avl.c \
	mem_hooks.c mvapich_malloc.c mv2_utils.c rdma_3dtorus.c ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
htmldoc:
mandoc:
latexdoc:
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/ib_init.d: $(srcdir)/ib_init.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_init.c > $(DEPS_DIR)/ib_init.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_init.c >$(DEPS_DIR)/ib_init.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_init.c >$(DEPS_DIR)/ib_init.d
$(DEPS_DIR)/ib_ckpt_shutdown.d: $(srcdir)/ib_ckpt_shutdown.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_ckpt_shutdown.c > $(DEPS_DIR)/ib_ckpt_shutdown.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_ckpt_shutdown.c >$(DEPS_DIR)/ib_ckpt_shutdown.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_ckpt_shutdown.c >$(DEPS_DIR)/ib_ckpt_shutdown.d
$(DEPS_DIR)/ib_connect_to_root.d: $(srcdir)/ib_connect_to_root.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_connect_to_root.c > $(DEPS_DIR)/ib_connect_to_root.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_connect_to_root.c >$(DEPS_DIR)/ib_connect_to_root.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_connect_to_root.c >$(DEPS_DIR)/ib_connect_to_root.d
$(DEPS_DIR)/ib_finalize.d: $(srcdir)/ib_finalize.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_finalize.c > $(DEPS_DIR)/ib_finalize.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_finalize.c >$(DEPS_DIR)/ib_finalize.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_finalize.c >$(DEPS_DIR)/ib_finalize.d
$(DEPS_DIR)/ib_poll.d: $(srcdir)/ib_poll.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_poll.c > $(DEPS_DIR)/ib_poll.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_poll.c >$(DEPS_DIR)/ib_poll.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_poll.c >$(DEPS_DIR)/ib_poll.d
$(DEPS_DIR)/ib_vc.d: $(srcdir)/ib_vc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_vc.c > $(DEPS_DIR)/ib_vc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_vc.c >$(DEPS_DIR)/ib_vc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_vc.c >$(DEPS_DIR)/ib_vc.d
$(DEPS_DIR)/ib_send.d: $(srcdir)/ib_send.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_send.c > $(DEPS_DIR)/ib_send.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_send.c >$(DEPS_DIR)/ib_send.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_send.c >$(DEPS_DIR)/ib_send.d
$(DEPS_DIR)/ib_param.d: $(srcdir)/ib_param.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_param.c > $(DEPS_DIR)/ib_param.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_param.c >$(DEPS_DIR)/ib_param.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_param.c >$(DEPS_DIR)/ib_param.d
$(DEPS_DIR)/ib_cm.d: $(srcdir)/ib_cm.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_cm.c > $(DEPS_DIR)/ib_cm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_cm.c >$(DEPS_DIR)/ib_cm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_cm.c >$(DEPS_DIR)/ib_cm.d
$(DEPS_DIR)/ib_cell.d: $(srcdir)/ib_cell.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_cell.c > $(DEPS_DIR)/ib_cell.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_cell.c >$(DEPS_DIR)/ib_cell.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_cell.c >$(DEPS_DIR)/ib_cell.d
$(DEPS_DIR)/ib_hca.d: $(srcdir)/ib_hca.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_hca.c > $(DEPS_DIR)/ib_hca.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_hca.c >$(DEPS_DIR)/ib_hca.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_hca.c >$(DEPS_DIR)/ib_hca.d
$(DEPS_DIR)/ib_process.d: $(srcdir)/ib_process.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_process.c > $(DEPS_DIR)/ib_process.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_process.c >$(DEPS_DIR)/ib_process.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_process.c >$(DEPS_DIR)/ib_process.d
$(DEPS_DIR)/ib_vbuf.d: $(srcdir)/ib_vbuf.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_vbuf.c > $(DEPS_DIR)/ib_vbuf.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_vbuf.c >$(DEPS_DIR)/ib_vbuf.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_vbuf.c >$(DEPS_DIR)/ib_vbuf.d
$(DEPS_DIR)/ib_channel_manager.d: $(srcdir)/ib_channel_manager.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_channel_manager.c > $(DEPS_DIR)/ib_channel_manager.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_channel_manager.c >$(DEPS_DIR)/ib_channel_manager.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_channel_manager.c >$(DEPS_DIR)/ib_channel_manager.d
$(DEPS_DIR)/ib_recv.d: $(srcdir)/ib_recv.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_recv.c > $(DEPS_DIR)/ib_recv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_recv.c >$(DEPS_DIR)/ib_recv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_recv.c >$(DEPS_DIR)/ib_recv.d
$(DEPS_DIR)/ib_srq.d: $(srcdir)/ib_srq.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_srq.c > $(DEPS_DIR)/ib_srq.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_srq.c >$(DEPS_DIR)/ib_srq.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_srq.c >$(DEPS_DIR)/ib_srq.d
$(DEPS_DIR)/ib_ds_hash.d: $(srcdir)/ib_ds_hash.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_ds_hash.c > $(DEPS_DIR)/ib_ds_hash.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_ds_hash.c >$(DEPS_DIR)/ib_ds_hash.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_ds_hash.c >$(DEPS_DIR)/ib_ds_hash.d
$(DEPS_DIR)/ib_ds_queue.d: $(srcdir)/ib_ds_queue.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_ds_queue.c > $(DEPS_DIR)/ib_ds_queue.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_ds_queue.c >$(DEPS_DIR)/ib_ds_queue.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_ds_queue.c >$(DEPS_DIR)/ib_ds_queue.d
$(DEPS_DIR)/ib_errors.d: $(srcdir)/ib_errors.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_errors.c > $(DEPS_DIR)/ib_errors.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_errors.c >$(DEPS_DIR)/ib_errors.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_errors.c >$(DEPS_DIR)/ib_errors.d
$(DEPS_DIR)/ib_rdma.d: $(srcdir)/ib_rdma.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_rdma.c > $(DEPS_DIR)/ib_rdma.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_rdma.c >$(DEPS_DIR)/ib_rdma.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_rdma.c >$(DEPS_DIR)/ib_rdma.d
$(DEPS_DIR)/ib_lmt_recv.d: $(srcdir)/ib_lmt_recv.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_lmt_recv.c > $(DEPS_DIR)/ib_lmt_recv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_recv.c >$(DEPS_DIR)/ib_lmt_recv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_recv.c >$(DEPS_DIR)/ib_lmt_recv.d
$(DEPS_DIR)/ib_lmt_send.d: $(srcdir)/ib_lmt_send.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_lmt_send.c > $(DEPS_DIR)/ib_lmt_send.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_send.c >$(DEPS_DIR)/ib_lmt_send.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_send.c >$(DEPS_DIR)/ib_lmt_send.d
$(DEPS_DIR)/dreg.d: dreg.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C dreg.c > $(DEPS_DIR)/dreg.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d ; \
	fi
	@$(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d
$(DEPS_DIR)/avl.d: avl.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C avl.c > $(DEPS_DIR)/avl.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d ; \
	fi
	@$(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d
$(DEPS_DIR)/mem_hooks.d: mem_hooks.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mem_hooks.c > $(DEPS_DIR)/mem_hooks.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d ; \
	fi
	@$(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d
$(DEPS_DIR)/mvapich_malloc.d: mvapich_malloc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mvapich_malloc.c > $(DEPS_DIR)/mvapich_malloc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d ; \
	fi
	@$(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d
$(DEPS_DIR)/mv2_utils.d: mv2_utils.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_utils.c > $(DEPS_DIR)/mv2_utils.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d
$(DEPS_DIR)/rdma_3dtorus.d: rdma_3dtorus.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_3dtorus.c > $(DEPS_DIR)/rdma_3dtorus.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d ; \
	fi
	@$(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d
$(DEPS_DIR)/timestamp: ib_init.c ib_ckpt_shutdown.c ib_connect_to_root.c ib_finalize.c ib_init.c   \
	ib_poll.c ib_vc.c ib_send.c ib_param.c ib_cm.c ib_cell.c   ib_hca.c \
	ib_process.c ib_vbuf.c ib_channel_manager.c ib_recv.c ib_srq.c   \
	ib_ds_hash.c ib_ds_queue.c ib_errors.c ib_rdma.c ib_lmt_recv.c \
	ib_lmt_send.c   dreg.c avl.c mem_hooks.c mvapich_malloc.c mv2_utils.c \
	rdma_3dtorus.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_init.c > $(DEPS_DIR)/ib_init.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_init.c >$(DEPS_DIR)/ib_init.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_init.c >$(DEPS_DIR)/ib_init.d
	echo "include $(DEPS_DIR)/ib_init.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_ckpt_shutdown.c > $(DEPS_DIR)/ib_ckpt_shutdown.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_ckpt_shutdown.c >$(DEPS_DIR)/ib_ckpt_shutdown.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_ckpt_shutdown.c >$(DEPS_DIR)/ib_ckpt_shutdown.d
	echo "include $(DEPS_DIR)/ib_ckpt_shutdown.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_connect_to_root.c > $(DEPS_DIR)/ib_connect_to_root.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_connect_to_root.c >$(DEPS_DIR)/ib_connect_to_root.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_connect_to_root.c >$(DEPS_DIR)/ib_connect_to_root.d
	echo "include $(DEPS_DIR)/ib_connect_to_root.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_finalize.c > $(DEPS_DIR)/ib_finalize.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_finalize.c >$(DEPS_DIR)/ib_finalize.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_finalize.c >$(DEPS_DIR)/ib_finalize.d
	echo "include $(DEPS_DIR)/ib_finalize.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_poll.c > $(DEPS_DIR)/ib_poll.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_poll.c >$(DEPS_DIR)/ib_poll.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_poll.c >$(DEPS_DIR)/ib_poll.d
	echo "include $(DEPS_DIR)/ib_poll.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_vc.c > $(DEPS_DIR)/ib_vc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_vc.c >$(DEPS_DIR)/ib_vc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_vc.c >$(DEPS_DIR)/ib_vc.d
	echo "include $(DEPS_DIR)/ib_vc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_send.c > $(DEPS_DIR)/ib_send.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_send.c >$(DEPS_DIR)/ib_send.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_send.c >$(DEPS_DIR)/ib_send.d
	echo "include $(DEPS_DIR)/ib_send.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_param.c > $(DEPS_DIR)/ib_param.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_param.c >$(DEPS_DIR)/ib_param.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_param.c >$(DEPS_DIR)/ib_param.d
	echo "include $(DEPS_DIR)/ib_param.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_cm.c > $(DEPS_DIR)/ib_cm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_cm.c >$(DEPS_DIR)/ib_cm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_cm.c >$(DEPS_DIR)/ib_cm.d
	echo "include $(DEPS_DIR)/ib_cm.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_cell.c > $(DEPS_DIR)/ib_cell.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_cell.c >$(DEPS_DIR)/ib_cell.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_cell.c >$(DEPS_DIR)/ib_cell.d
	echo "include $(DEPS_DIR)/ib_cell.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_hca.c > $(DEPS_DIR)/ib_hca.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_hca.c >$(DEPS_DIR)/ib_hca.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_hca.c >$(DEPS_DIR)/ib_hca.d
	echo "include $(DEPS_DIR)/ib_hca.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_process.c > $(DEPS_DIR)/ib_process.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_process.c >$(DEPS_DIR)/ib_process.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_process.c >$(DEPS_DIR)/ib_process.d
	echo "include $(DEPS_DIR)/ib_process.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_vbuf.c > $(DEPS_DIR)/ib_vbuf.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_vbuf.c >$(DEPS_DIR)/ib_vbuf.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_vbuf.c >$(DEPS_DIR)/ib_vbuf.d
	echo "include $(DEPS_DIR)/ib_vbuf.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_channel_manager.c > $(DEPS_DIR)/ib_channel_manager.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_channel_manager.c >$(DEPS_DIR)/ib_channel_manager.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_channel_manager.c >$(DEPS_DIR)/ib_channel_manager.d
	echo "include $(DEPS_DIR)/ib_channel_manager.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_recv.c > $(DEPS_DIR)/ib_recv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_recv.c >$(DEPS_DIR)/ib_recv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_recv.c >$(DEPS_DIR)/ib_recv.d
	echo "include $(DEPS_DIR)/ib_recv.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_srq.c > $(DEPS_DIR)/ib_srq.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_srq.c >$(DEPS_DIR)/ib_srq.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_srq.c >$(DEPS_DIR)/ib_srq.d
	echo "include $(DEPS_DIR)/ib_srq.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_ds_hash.c > $(DEPS_DIR)/ib_ds_hash.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_ds_hash.c >$(DEPS_DIR)/ib_ds_hash.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_ds_hash.c >$(DEPS_DIR)/ib_ds_hash.d
	echo "include $(DEPS_DIR)/ib_ds_hash.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_ds_queue.c > $(DEPS_DIR)/ib_ds_queue.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_ds_queue.c >$(DEPS_DIR)/ib_ds_queue.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_ds_queue.c >$(DEPS_DIR)/ib_ds_queue.d
	echo "include $(DEPS_DIR)/ib_ds_queue.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_errors.c > $(DEPS_DIR)/ib_errors.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_errors.c >$(DEPS_DIR)/ib_errors.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_errors.c >$(DEPS_DIR)/ib_errors.d
	echo "include $(DEPS_DIR)/ib_errors.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_rdma.c > $(DEPS_DIR)/ib_rdma.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_rdma.c >$(DEPS_DIR)/ib_rdma.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_rdma.c >$(DEPS_DIR)/ib_rdma.d
	echo "include $(DEPS_DIR)/ib_rdma.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_lmt_recv.c > $(DEPS_DIR)/ib_lmt_recv.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_recv.c >$(DEPS_DIR)/ib_lmt_recv.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_recv.c >$(DEPS_DIR)/ib_lmt_recv.d
	echo "include $(DEPS_DIR)/ib_lmt_recv.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C ib_lmt_send.c > $(DEPS_DIR)/ib_lmt_send.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_send.c >$(DEPS_DIR)/ib_lmt_send.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/ib_lmt_send.c >$(DEPS_DIR)/ib_lmt_send.d
	echo "include $(DEPS_DIR)/ib_lmt_send.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C dreg.c > $(DEPS_DIR)/dreg.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d ; \
	fi
	@$(MAKE_DEPEND_C)  dreg.c >$(DEPS_DIR)/dreg.d
	echo "include $(DEPS_DIR)/dreg.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C avl.c > $(DEPS_DIR)/avl.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d ; \
	fi
	@$(MAKE_DEPEND_C)  avl.c >$(DEPS_DIR)/avl.d
	echo "include $(DEPS_DIR)/avl.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mem_hooks.c > $(DEPS_DIR)/mem_hooks.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d ; \
	fi
	@$(MAKE_DEPEND_C)  mem_hooks.c >$(DEPS_DIR)/mem_hooks.d
	echo "include $(DEPS_DIR)/mem_hooks.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mvapich_malloc.c > $(DEPS_DIR)/mvapich_malloc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d ; \
	fi
	@$(MAKE_DEPEND_C)  mvapich_malloc.c >$(DEPS_DIR)/mvapich_malloc.d
	echo "include $(DEPS_DIR)/mvapich_malloc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mv2_utils.c > $(DEPS_DIR)/mv2_utils.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d ; \
	fi
	@$(MAKE_DEPEND_C)  mv2_utils.c >$(DEPS_DIR)/mv2_utils.d
	echo "include $(DEPS_DIR)/mv2_utils.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C rdma_3dtorus.c > $(DEPS_DIR)/rdma_3dtorus.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d ; \
	fi
	@$(MAKE_DEPEND_C)  rdma_3dtorus.c >$(DEPS_DIR)/rdma_3dtorus.d
	echo "include $(DEPS_DIR)/rdma_3dtorus.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  ib_init.c ib_ckpt_shutdown.c ib_connect_to_root.c \
	ib_finalize.c ib_init.c ib_poll.c ib_vc.c ib_send.c ib_param.c \
	ib_cm.c ib_cell.c ib_hca.c ib_process.c ib_vbuf.c \
	ib_channel_manager.c ib_recv.c ib_srq.c ib_ds_hash.c ib_ds_queue.c \
	ib_errors.c ib_rdma.c ib_lmt_recv.c ib_lmt_send.c dreg.c avl.c \
	mem_hooks.c mvapich_malloc.c mv2_utils.c rdma_3dtorus.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------

FORCE_TARGET:

