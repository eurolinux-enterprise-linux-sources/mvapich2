# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT  = @INSTALL_SCRIPT@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR_P         = @MKDIR_P@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
top_srcdir      = @top_srcdir@
prefix          = @prefix@
exec_prefix     = @exec_prefix@
includedir      = @includedir@
bindir          = @bindir@
libdir          = @libdir@
sysconfdir      = @sysconfdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
MPIG_SOURCE_DIR=@MPIG_SOURCE_DIR@
MPIG_BUILD_DIR=@MPIG_BUILD_DIR@
MPIG_VMPI_PREMAIN_CC_LIB=@MPIG_VMPI_PREMAIN_CC_LIB@
MPIG_VMPI_PREMAIN_CXX_LIB=@MPIG_VMPI_PREMAIN_CXX_LIB@
INCLUDES = -I../../include -I${master_top_srcdir}/src/include
HEADERS =			\
    mpidconf.h.in		\
    mpiddefs.h.in		\
    mpidimpl.h			\
    mpidpost.h			\
    mpidpre.h			\
    mpig_cm_other.h		\
    mpig_cm_self.h		\
    mpig_cm_vmpi.h		\
    mpig_cm_xio.h		\
    mpig_vmpi.h			\


.SUFFIXES:
.SUFFIXES: .o .lo .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

 ${srcdir}/configure: ${srcdir}/configure.in 
	@rm -rf autom4te*.cache
	(cd ${srcdir} && autoconf -I ../../../confdb )

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../ \
	-configdir=src/mpid/globus/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile examples/Makefile mpiexec mpiddefs.h.out:mpiddefs.h.in localdefs config.status config.log config.cache *conf.cache config.system" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-if [ -x config.status ] ; then CONFIG_FILES=Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-local distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile examples/Makefile mpiexec mpiddefs.h.out:mpiddefs.h.in localdefs config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean maintainer-clean-local distclean-local distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: all-local  .libstamp0 ../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	fi

.libstamp0 ../../../lib/lib${MPILIBNAME}.a: mpid_env.o mpid_progress.o \
	mpid_pt2pt.o mpid_services.o mpid_vc.o mpid_win.o mpig_bc.o \
	mpig_cm_other.o mpig_cm_self.o mpig_cm_xio.o mpig_cm_vmpi.o \
	mpig_comm.o mpig_misc.o mpig_pg.o mpig_pm.o mpig_pm_gk.o \
	mpig_pm_vmpi.o mpig_pm_ws.o mpig_recvq.o mpig_request.o \
	mpig_topology.o mpig_vmpi.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../lib/lib${MPILIBNAME}.la: mpid_env.lo mpid_progress.lo \
	mpid_pt2pt.lo mpid_services.lo mpid_vc.lo mpid_win.lo mpig_bc.lo \
	mpig_cm_other.lo mpig_cm_self.lo mpig_cm_xio.lo mpig_cm_vmpi.lo \
	mpig_comm.lo mpig_misc.lo mpig_pg.lo mpig_pm.lo mpig_pm_gk.lo \
	mpig_pm_vmpi.lo mpig_pm_ws.lo mpig_recvq.lo mpig_request.lo \
	mpig_topology.lo mpig_vmpi.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
coverage: 
	-@for file in mpid_env.c			    mpid_progress.c		    mpid_pt2pt.c		    \
	mpid_services.c		    mpid_vc.c			    mpid_win.c			    mpig_bc.c			    \
	mpig_cm_other.c		    mpig_cm_self.c		    mpig_cm_xio.c		    \
	mpig_cm_vmpi.c		    mpig_comm.c			    mpig_misc.c			    mpig_pg.c			  \
	  mpig_pm.c			    mpig_pm_gk.c		    mpig_pm_vmpi.c		    \
	mpig_pm_ws.c		    mpig_recvq.c		    mpig_request.c		    \
	mpig_topology.c		    mpig_vmpi.c			 ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
htmldoc:
mandoc:
latexdoc:
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Install target
install:  FORCE_TARGET 
	if [ ! -d ${DESTDIR}${prefix} ] ; then $(MKDIR_P) ${DESTDIR}${prefix} ; fi
	if [ ! -d ${DESTDIR}${includedir} ] ; then $(MKDIR_P) ${DESTDIR}${includedir} ; fi
	$(INSTALL_DATA) ../../include/mpiddefs.h ${DESTDIR}${includedir}/mpiddefs.h
	if [ ! -d ${DESTDIR}${exec_prefix} ] ; then $(MKDIR_P) ${DESTDIR}${exec_prefix} ; fi
	if [ ! -d ${DESTDIR}${bindir} ] ; then $(MKDIR_P) ${DESTDIR}${bindir} ; fi
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpiexec ${DESTDIR}${bindir}/mpiexec
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpich2-grid-cc ${DESTDIR}${bindir}/mpich2-grid-cc
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpiexec ${DESTDIR}${bindir}/mpiexec
	if [ ! -d ${DESTDIR}${libdir} ] ; then $(MKDIR_P) ${DESTDIR}${libdir} ; fi
	if [ -s libmpig_vmpi_premain_cc.a ] ; then $(INSTALL_DATA) libmpig_vmpi_premain_cc.a ${DESTDIR}${libdir}/libmpig_vmpi_premain_cc.a ; fi
	if [ -s libmpig_vmpi_premain_cxx.a ] ; then $(INSTALL_DATA) libmpig_vmpi_premain_cxx.a ${DESTDIR}${libdir}/libmpig_vmpi_premain_cxx.a ; fi
	if [ -s mpich2-grid-cxx ] ; then $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpich2-grid-cxx ${DESTDIR}${bindir}/mpich2-grid-cxx ; fi
	if [ -s mpich2-grid-f77 ] ; then $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpich2-grid-f77 ${DESTDIR}${bindir}/mpich2-grid-f77 ; fi
	if [ -s mpich2-grid-f90 ] ; then $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpich2-grid-f90 ${DESTDIR}${bindir}/mpich2-grid-f90 ; fi
	if [ ! -d ${DESTDIR}${sysconfdir} ] ; then $(MKDIR_P) ${DESTDIR}${sysconfdir} ; fi
	if [ -s mpich2-grid-cc-insure-psrc ] ; then $(INSTALL_DATA) mpich2-grid-cc-insure-psrc ${DESTDIR}${sysconfdir}/mpich2-grid-cc-insure-psrc ; fi
	if [ -s mpich2-grid-cxx-insure-psrc ] ; then $(INSTALL_DATA) mpich2-grid-cxx-insure-psrc ${DESTDIR}${sysconfdir}/mpich2-grid-cxx-insure-psrc ; fi
	${MAKE} install-postamble

install-strip:
	$(MAKE) INSTALL_STRIP_FLAG=-s install
uninstall: 
	-rm -f ${DESTDIR}${includedir}/mpiddefs.h
	-rm -f ${DESTDIR}${bindir}/mpiexec
	-rm -f ${DESTDIR}${bindir}/mpich2-grid-cc
	-rm -f ${DESTDIR}${bindir}/mpiexec
	-rm -f ${DESTDIR}${libdir}/libmpig_vmpi_premain_cc.a
	-rm -f ${DESTDIR}${libdir}/libmpig_vmpi_premain_cxx.a
	-rm -f ${DESTDIR}${bindir}/mpich2-grid-cxx
	-rm -f ${DESTDIR}${bindir}/mpich2-grid-f77
	-rm -f ${DESTDIR}${bindir}/mpich2-grid-f90
	-rm -f ${DESTDIR}${sysconfdir}/mpich2-grid-cc-insure-psrc
	-rm -f ${DESTDIR}${sysconfdir}/mpich2-grid-cxx-insure-psrc
installcheck: 
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
	(cd examples && ${MAKE} dependencies )
$(DEPS_DIR)/mpid_env.d: $(srcdir)/mpid_env.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_env.c > $(DEPS_DIR)/mpid_env.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_env.c >$(DEPS_DIR)/mpid_env.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_env.c >$(DEPS_DIR)/mpid_env.d
$(DEPS_DIR)/mpid_progress.d: $(srcdir)/mpid_progress.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_progress.c > $(DEPS_DIR)/mpid_progress.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_progress.c >$(DEPS_DIR)/mpid_progress.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_progress.c >$(DEPS_DIR)/mpid_progress.d
$(DEPS_DIR)/mpid_pt2pt.d: $(srcdir)/mpid_pt2pt.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_pt2pt.c > $(DEPS_DIR)/mpid_pt2pt.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_pt2pt.c >$(DEPS_DIR)/mpid_pt2pt.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_pt2pt.c >$(DEPS_DIR)/mpid_pt2pt.d
$(DEPS_DIR)/mpid_services.d: $(srcdir)/mpid_services.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_services.c > $(DEPS_DIR)/mpid_services.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_services.c >$(DEPS_DIR)/mpid_services.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_services.c >$(DEPS_DIR)/mpid_services.d
$(DEPS_DIR)/mpid_vc.d: $(srcdir)/mpid_vc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_vc.c > $(DEPS_DIR)/mpid_vc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_vc.c >$(DEPS_DIR)/mpid_vc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_vc.c >$(DEPS_DIR)/mpid_vc.d
$(DEPS_DIR)/mpid_win.d: $(srcdir)/mpid_win.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_win.c > $(DEPS_DIR)/mpid_win.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_win.c >$(DEPS_DIR)/mpid_win.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_win.c >$(DEPS_DIR)/mpid_win.d
$(DEPS_DIR)/mpig_bc.d: $(srcdir)/mpig_bc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_bc.c > $(DEPS_DIR)/mpig_bc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_bc.c >$(DEPS_DIR)/mpig_bc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_bc.c >$(DEPS_DIR)/mpig_bc.d
$(DEPS_DIR)/mpig_cm_other.d: $(srcdir)/mpig_cm_other.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_other.c > $(DEPS_DIR)/mpig_cm_other.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_other.c >$(DEPS_DIR)/mpig_cm_other.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_other.c >$(DEPS_DIR)/mpig_cm_other.d
$(DEPS_DIR)/mpig_cm_self.d: $(srcdir)/mpig_cm_self.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_self.c > $(DEPS_DIR)/mpig_cm_self.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_self.c >$(DEPS_DIR)/mpig_cm_self.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_self.c >$(DEPS_DIR)/mpig_cm_self.d
$(DEPS_DIR)/mpig_cm_xio.d: $(srcdir)/mpig_cm_xio.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_xio.c > $(DEPS_DIR)/mpig_cm_xio.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_xio.c >$(DEPS_DIR)/mpig_cm_xio.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_xio.c >$(DEPS_DIR)/mpig_cm_xio.d
$(DEPS_DIR)/mpig_cm_vmpi.d: $(srcdir)/mpig_cm_vmpi.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_vmpi.c > $(DEPS_DIR)/mpig_cm_vmpi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_vmpi.c >$(DEPS_DIR)/mpig_cm_vmpi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_vmpi.c >$(DEPS_DIR)/mpig_cm_vmpi.d
$(DEPS_DIR)/mpig_comm.d: $(srcdir)/mpig_comm.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_comm.c > $(DEPS_DIR)/mpig_comm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_comm.c >$(DEPS_DIR)/mpig_comm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_comm.c >$(DEPS_DIR)/mpig_comm.d
$(DEPS_DIR)/mpig_misc.d: $(srcdir)/mpig_misc.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_misc.c > $(DEPS_DIR)/mpig_misc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_misc.c >$(DEPS_DIR)/mpig_misc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_misc.c >$(DEPS_DIR)/mpig_misc.d
$(DEPS_DIR)/mpig_pg.d: $(srcdir)/mpig_pg.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pg.c > $(DEPS_DIR)/mpig_pg.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pg.c >$(DEPS_DIR)/mpig_pg.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pg.c >$(DEPS_DIR)/mpig_pg.d
$(DEPS_DIR)/mpig_pm.d: $(srcdir)/mpig_pm.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm.c > $(DEPS_DIR)/mpig_pm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm.c >$(DEPS_DIR)/mpig_pm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm.c >$(DEPS_DIR)/mpig_pm.d
$(DEPS_DIR)/mpig_pm_gk.d: $(srcdir)/mpig_pm_gk.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm_gk.c > $(DEPS_DIR)/mpig_pm_gk.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_gk.c >$(DEPS_DIR)/mpig_pm_gk.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_gk.c >$(DEPS_DIR)/mpig_pm_gk.d
$(DEPS_DIR)/mpig_pm_vmpi.d: $(srcdir)/mpig_pm_vmpi.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm_vmpi.c > $(DEPS_DIR)/mpig_pm_vmpi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_vmpi.c >$(DEPS_DIR)/mpig_pm_vmpi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_vmpi.c >$(DEPS_DIR)/mpig_pm_vmpi.d
$(DEPS_DIR)/mpig_pm_ws.d: $(srcdir)/mpig_pm_ws.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm_ws.c > $(DEPS_DIR)/mpig_pm_ws.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_ws.c >$(DEPS_DIR)/mpig_pm_ws.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_ws.c >$(DEPS_DIR)/mpig_pm_ws.d
$(DEPS_DIR)/mpig_recvq.d: $(srcdir)/mpig_recvq.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_recvq.c > $(DEPS_DIR)/mpig_recvq.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_recvq.c >$(DEPS_DIR)/mpig_recvq.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_recvq.c >$(DEPS_DIR)/mpig_recvq.d
$(DEPS_DIR)/mpig_request.d: $(srcdir)/mpig_request.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_request.c > $(DEPS_DIR)/mpig_request.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_request.c >$(DEPS_DIR)/mpig_request.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_request.c >$(DEPS_DIR)/mpig_request.d
$(DEPS_DIR)/mpig_topology.d: $(srcdir)/mpig_topology.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_topology.c > $(DEPS_DIR)/mpig_topology.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_topology.c >$(DEPS_DIR)/mpig_topology.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_topology.c >$(DEPS_DIR)/mpig_topology.d
$(DEPS_DIR)/mpig_vmpi.d: $(srcdir)/mpig_vmpi.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_vmpi.c > $(DEPS_DIR)/mpig_vmpi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_vmpi.c >$(DEPS_DIR)/mpig_vmpi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_vmpi.c >$(DEPS_DIR)/mpig_vmpi.d
$(DEPS_DIR)/timestamp: mpid_env.c			    mpid_progress.c		    mpid_pt2pt.c		    mpid_services.c		    \
	mpid_vc.c			    mpid_win.c			    mpig_bc.c			    mpig_cm_other.c		    \
	mpig_cm_self.c		    mpig_cm_xio.c		    mpig_cm_vmpi.c		    \
	mpig_comm.c			    mpig_misc.c			    mpig_pg.c			    mpig_pm.c			    \
	mpig_pm_gk.c		    mpig_pm_vmpi.c		    mpig_pm_ws.c		    \
	mpig_recvq.c		    mpig_request.c		    mpig_topology.c		    \
	mpig_vmpi.c			 Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_env.c > $(DEPS_DIR)/mpid_env.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_env.c >$(DEPS_DIR)/mpid_env.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_env.c >$(DEPS_DIR)/mpid_env.d
	echo "include $(DEPS_DIR)/mpid_env.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_progress.c > $(DEPS_DIR)/mpid_progress.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_progress.c >$(DEPS_DIR)/mpid_progress.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_progress.c >$(DEPS_DIR)/mpid_progress.d
	echo "include $(DEPS_DIR)/mpid_progress.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_pt2pt.c > $(DEPS_DIR)/mpid_pt2pt.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_pt2pt.c >$(DEPS_DIR)/mpid_pt2pt.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_pt2pt.c >$(DEPS_DIR)/mpid_pt2pt.d
	echo "include $(DEPS_DIR)/mpid_pt2pt.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_services.c > $(DEPS_DIR)/mpid_services.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_services.c >$(DEPS_DIR)/mpid_services.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_services.c >$(DEPS_DIR)/mpid_services.d
	echo "include $(DEPS_DIR)/mpid_services.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_vc.c > $(DEPS_DIR)/mpid_vc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_vc.c >$(DEPS_DIR)/mpid_vc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_vc.c >$(DEPS_DIR)/mpid_vc.d
	echo "include $(DEPS_DIR)/mpid_vc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpid_win.c > $(DEPS_DIR)/mpid_win.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpid_win.c >$(DEPS_DIR)/mpid_win.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpid_win.c >$(DEPS_DIR)/mpid_win.d
	echo "include $(DEPS_DIR)/mpid_win.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_bc.c > $(DEPS_DIR)/mpig_bc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_bc.c >$(DEPS_DIR)/mpig_bc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_bc.c >$(DEPS_DIR)/mpig_bc.d
	echo "include $(DEPS_DIR)/mpig_bc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_other.c > $(DEPS_DIR)/mpig_cm_other.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_other.c >$(DEPS_DIR)/mpig_cm_other.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_other.c >$(DEPS_DIR)/mpig_cm_other.d
	echo "include $(DEPS_DIR)/mpig_cm_other.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_self.c > $(DEPS_DIR)/mpig_cm_self.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_self.c >$(DEPS_DIR)/mpig_cm_self.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_self.c >$(DEPS_DIR)/mpig_cm_self.d
	echo "include $(DEPS_DIR)/mpig_cm_self.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_xio.c > $(DEPS_DIR)/mpig_cm_xio.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_xio.c >$(DEPS_DIR)/mpig_cm_xio.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_xio.c >$(DEPS_DIR)/mpig_cm_xio.d
	echo "include $(DEPS_DIR)/mpig_cm_xio.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_cm_vmpi.c > $(DEPS_DIR)/mpig_cm_vmpi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_vmpi.c >$(DEPS_DIR)/mpig_cm_vmpi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_cm_vmpi.c >$(DEPS_DIR)/mpig_cm_vmpi.d
	echo "include $(DEPS_DIR)/mpig_cm_vmpi.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_comm.c > $(DEPS_DIR)/mpig_comm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_comm.c >$(DEPS_DIR)/mpig_comm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_comm.c >$(DEPS_DIR)/mpig_comm.d
	echo "include $(DEPS_DIR)/mpig_comm.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_misc.c > $(DEPS_DIR)/mpig_misc.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_misc.c >$(DEPS_DIR)/mpig_misc.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_misc.c >$(DEPS_DIR)/mpig_misc.d
	echo "include $(DEPS_DIR)/mpig_misc.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pg.c > $(DEPS_DIR)/mpig_pg.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pg.c >$(DEPS_DIR)/mpig_pg.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pg.c >$(DEPS_DIR)/mpig_pg.d
	echo "include $(DEPS_DIR)/mpig_pg.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm.c > $(DEPS_DIR)/mpig_pm.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm.c >$(DEPS_DIR)/mpig_pm.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm.c >$(DEPS_DIR)/mpig_pm.d
	echo "include $(DEPS_DIR)/mpig_pm.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm_gk.c > $(DEPS_DIR)/mpig_pm_gk.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_gk.c >$(DEPS_DIR)/mpig_pm_gk.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_gk.c >$(DEPS_DIR)/mpig_pm_gk.d
	echo "include $(DEPS_DIR)/mpig_pm_gk.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm_vmpi.c > $(DEPS_DIR)/mpig_pm_vmpi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_vmpi.c >$(DEPS_DIR)/mpig_pm_vmpi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_vmpi.c >$(DEPS_DIR)/mpig_pm_vmpi.d
	echo "include $(DEPS_DIR)/mpig_pm_vmpi.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_pm_ws.c > $(DEPS_DIR)/mpig_pm_ws.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_ws.c >$(DEPS_DIR)/mpig_pm_ws.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_pm_ws.c >$(DEPS_DIR)/mpig_pm_ws.d
	echo "include $(DEPS_DIR)/mpig_pm_ws.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_recvq.c > $(DEPS_DIR)/mpig_recvq.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_recvq.c >$(DEPS_DIR)/mpig_recvq.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_recvq.c >$(DEPS_DIR)/mpig_recvq.d
	echo "include $(DEPS_DIR)/mpig_recvq.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_request.c > $(DEPS_DIR)/mpig_request.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_request.c >$(DEPS_DIR)/mpig_request.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_request.c >$(DEPS_DIR)/mpig_request.d
	echo "include $(DEPS_DIR)/mpig_request.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_topology.c > $(DEPS_DIR)/mpig_topology.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_topology.c >$(DEPS_DIR)/mpig_topology.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_topology.c >$(DEPS_DIR)/mpig_topology.d
	echo "include $(DEPS_DIR)/mpig_topology.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C mpig_vmpi.c > $(DEPS_DIR)/mpig_vmpi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/mpig_vmpi.c >$(DEPS_DIR)/mpig_vmpi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/mpig_vmpi.c >$(DEPS_DIR)/mpig_vmpi.d
	echo "include $(DEPS_DIR)/mpig_vmpi.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  mpid_env.c mpid_progress.c mpid_pt2pt.c mpid_services.c \
	mpid_vc.c mpid_win.c mpig_bc.c mpig_cm_other.c mpig_cm_self.c \
	mpig_cm_xio.c mpig_cm_vmpi.c mpig_comm.c mpig_misc.c mpig_pg.c \
	mpig_pm.c mpig_pm_gk.c mpig_pm_vmpi.c mpig_pm_ws.c mpig_recvq.c \
	mpig_request.c mpig_topology.c mpig_vmpi.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------
# 
# Globus device code:          Copyright 2005 Northern Illinois University
# Borrowed MPICH-G2 code:      Copyright 2000 Argonne National Laboratory and Northern Illinois University
# Borrowed MPICH2 device code: Copyright 2001 Argonne National Laboratory
# 
# XXX: INSERT POINTER TO OFFICIAL COPYRIGHT TEXT
# 


#
# add top-level include directory
#

#
# list of header files that all sources depend upon
#
#
# targets that must be handled in a special way
#
mpig_vmpi.c: mpig_vmpi.h mpidconf.h

mpig_vmpi.o: mpig_vmpi.c
	$(CC) -c -I . -I${top_srcdir} $<

mpig_vmpi.lo: mpig_vmpi.c mpig_vmpi.h mpidconf.h
	$(CC_SHL) -c -I . -I${top_srcdir} $< -o _s$*.o
	@mv -f _s$*.o $*.lo

all-local: $(MPIG_VMPI_PREMAIN_CC_LIB) $(MPIG_VMPI_PREMAIN_CXX_LIB)

libmpig_vmpi_premain_cc.a: mpig_vmpi_premain_cc.o
	${AR} cr $@ $?
	${RANLIB} $@

libmpig_vmpi_premain_cxx.a: mpig_vmpi_premain_cxx.o
	${AR} cr $@ $?
	${RANLIB} $@

mpig_vmpi_premain_cc.o: mpig_vmpi_premain.c mpig_vmpi.h mpidconf.h
	$(CC) -c -I . -I${top_srcdir} $< -o $@

mpig_vmpi_premain_cxx.o: mpig_vmpi_premain.c mpig_vmpi.h mpidconf.h
	$(CXX) -c -I . -I${top_srcdir} $< -o $@

#
# list of file to compile and include in the MPICH2 library
#
#
# install device compiler scripts, and  modify the previously installed MPICH2 compiler scripts to use the installed
# device scripts
#

install-postamble:
	@# XXX: The file permissions are assumed to be 755 for the compilers scripts and 644 for the configuration files.  This
	@#      seemed reasonable given that those are the values used by autoconf 2.59.
	@for c in cc cxx f77 f90 ; do \
	    cn=mpi$${c} ; \
	    cf=${bindir}/$${cn} ; \
	    if test -f $${cf} ; then \
		echo "Updating the paths in the MPICH2 compiler script $${cn}" ; \
	        mv $${cf} $${cf}.orig ; \
	        sed -e "s,${MPIG_BUILD_DIR}/mpich2-grid-$${c}-insure-psrc,${sysconfdir}/mpich2-grid-$${c}-insure-psrc," \
		    -e "s,${MPIG_BUILD_DIR},${bindir}," $${cf}.orig >$${cf} ; \
	        chmod 755 $${cf} ; \
	        rm -f $${cf}.orig ; \
	    fi ; \
	    cn=mpi$${c} ; \
	    cf=${sysconfdir}/$${cn}.conf ; \
	    if test -f $${cf} ; then \
		echo "Updating the paths in the MPICH2 configuration file $${cn}" ; \
	        mv $${cf} $${cf}.orig ; \
	        sed -e "s,${MPIG_BUILD_DIR}/mpich2-grid-$${c}-insure-psrc,${sysconfdir}/mpich2-grid-$${c}-insure-psrc," \
		    -e "s,${MPIG_BUILD_DIR},${bindir}," $${cf}.orig >$${cf} ; \
	        chmod 644 $${cf} ; \
	        rm -f $${cf}.orig ; \
	    fi ; \
	done
	@if test -n "$(MPIG_VMPI_PREMAIN_CC_LIB)" ; then \
	    for c in cc cxx ; do \
		cn=mpich2-grid-$${c} ; \
	        cf=${bindir}/$${cn} ; \
		premain_lib=libmpig_vmpi_premain_$${c}.a ; \
	        if test -f $${cf} ; then \
		    echo "Updating the paths in the MPIg compiler script $${cn}" ; \
	            mv $${cf} $${cf}.orig ; \
	            sed -e 's,^\(MPIG_VMPI_PREMAIN_LIB\)=.*,\1="'"${libdir}/$${premain_lib}"'",' $${cf}.orig >$${cf} ; \
	            chmod 755 $${cf} ; \
	            rm -f $${cf}.orig ; \
	        fi ; \
	    done ; \
	fi

# Other directories in which simplemake should translate the Makefile.sm to a Makefile.in

#
# clean up files created by configure
#
distclean-local:
	-rm -f mpich2-grid-cc
	-rm -f mpich2-grid-cxx
	-rm -f mpich2-grid-f77
	-rm -f mpich2-grid-f90
	-rm -f mpich2-grid-settings
	-rm -f mpidconf.h
	-rm -f mpiexec

#
# clean up files created by maint/updatefiles (autoheader, autoconf, etc.)
#
maintainer-clean-local:
	-rm -f mpidconf.h.in

#
# targets for building state and error text translation files
#
describe_states.txt: FORCE_TARGET
	grep -h MPID_STATE ${MPIG_SOURCE_DIR}/*.[chi] | sed -e 's/.*(\([A-Za-z0-9_]*\)/\1/' -e 's/);.*$$//' | \
	    sort -u | awk '{print $$1, $$1}' | sed -e 's/ MPID_STATE_/ /' -e 's/ MPID_\([A-Z]\)\([A-Z_]*\)/ MPID_\1\L\2/' \
	    >${MPIG_SOURCE_DIR}/describe_states.txt

# grid-errnames.txt: FORCE_TARGET
# 	sed -e '/^\*\*\(globus|[^ :]*\):\1/ d' -e '/^\*\*\(globus|[^ :]*\) \([^:]*\):\1 -- \2/ d' \
# 	    ${MPIG_SOURCE_DIR}/errnames.txt >.errnames-$$$$.txt ; \
# 	if test $$? -eq 0 ; then \
# 	    grep '"\*\*[^"]*"' ${MPIG_SOURCE_DIR}/*.[chi] | sed -e 's/[^"]*\("\*\*[^"]*"\)/\1/g' -e 's/""/"\n"/' | \
# 	        sed -e 's/"\*\*\([^"]*\)".*$$/**\1:\1/' -e 's/\(:[A-Za-z0-9_|]* \)%/\1-- %/' | \
# 	        grep -h '\*\*globus|' .errnames-$$$$.txt - | sort -t ':' +0 -1 -u >grid-errnames.txt ; \
# 	fi ; \
# 	rm .errnames-$$$$.txt

grid-errnames.txt: FORCE_TARGET
	grep '"\*\*[^"]*"' ${MPIG_SOURCE_DIR}/*.[chi] | \
	    sed -e 's/[^"]*\("\*\*[^"]*"\)/\1/g' -e 's/""/"\n"/' | \
	    sed -e 's/"\*\*\([^"]*\)".*$$/**\1:\1/' -e 's/\(:[A-Za-z0-9_|]* \)%/\1-- %/' | \
	    grep -h '\*\*globus|' ${MPIG_SOURCE_DIR}/errnames.txt - | \
	    sort -t ':' +0 -1 -u >.errnames-$$$$.txt ; \
	if test $$? -eq 0 ; then \
	    mv .errnames-$$$$.txt ${MPIG_SOURCE_DIR}/errnames.txt ; \
	fi
#
# add new symbols to the symbol renaming header file.
#
# NOTE: this should only be run on a linux platform.  the may or may not run on other platforms, and if it does run, it may or may
# not corrupt the header file.
#
#
# EXTREMELY IMPORTANT NOTE: this target should only be run when MPIG is configure with --disable-f77 --disable-f90 --disable-cxx
# --without-mpe
#
mpig_symbol_map.txt: FORCE_TARGET
	objects='Comm\|Datatype\|Errhandler\|Group\|File\|Info\|Keyval\|Op\|Request\|Win'; \
	fields='mem\|builtin\|direct'; \
	files="${top_builddir}/lib/lib${MPILIBNAME}.a" ; \
	if test -n "${PMPILIBNAME}" -a "${PMPILIBNAME}" != "${MPILIBNAME}" -a -f "${top_builddir}/lib/lib${PMPILIBNAME}.a" ; then \
	    files="$${files} ${top_builddir}/lib/lib${PMPILIBNAME}.a" ; \
	fi ; \
	nm $${files} >.mpig_nm_$$$$.out ; \
	if test $$? -eq 0 ; then \
	    sed -e '/.*[ABCDGIRSTVW] [A-Za-z0-9_]*$$/! d' -e 's/.*[ABCDGIRSTVW\] \([A-Za-z0-9_]*\)$$/\1/' \
	        -e '/.*_$$/ d' -e '/^[Mm][Pp][Ii][Gg]_/ d' -e '/_MPIG$$/ d' \
	        -e 's/MPID_\('"$$objects"'\)_\('"$$fields"'\)/@SKIP MPID_\1_\2 MPIG_\1_\2/' \
	        -e '/^@SKIP /! s/\(^.*$$\)/\1 \1_MPIG/' -e 's/^@SKIP //' .mpig_nm_$$$$.out | \
	        cat ${MPIG_SOURCE_DIR}/mpig_symbol_map.txt - >.mpig_symbol_map_$$$$.out ; \
	    if test $$? -eq 0 ; then \
	        sort .mpig_symbol_map_$$$$.out +0 -1 -u >${MPIG_SOURCE_DIR}/mpig_symbol_map.txt ; \
	    fi ; \
	    rm .mpig_symbol_map_$$$$.out ; \
	fi ; \
	rm .mpig_nm_$$$$.out

check-vmpi-libs: FORCE_TARGET
	objects='Comm\|Datatype\|Errhandler\|Group\|File\|Info\|Keyval\|Op\|Request\|Win'; \
	fields='mem\|builtin\|direct'; \
	files="${top_builddir}/lib/lib${MPILIBNAME}.a" ; \
	if test -n "${PMPILIBNAME}" -a "${PMPILIBNAME}" != "${MPILIBNAME}" -a -f "${top_builddir}/lib/lib${PMPILIBNAME}.a" ; then \
	    files="$${files} ${top_builddir}/lib/lib${PMPILIBNAME}.a" ; \
	fi ; \
	nm $${files} | sed -e '/.*[ABCDGIRSTVW] [A-Za-z0-9_]*$$/! d' \
	        -e 's/.*[ABCDGIRSTVW\] \([A-Za-z0-9_]*\)$$/\1/' \
	        -e '/.*_$$/ d' -e '/^[Mm][Pp][Ii][Gg]_/ d' -e '/_MPIG$$/ d' \
	        -e 's/MPID_\('"$$objects"'\)_\('"$$fields"'\)/@SKIP MPID_\1_\2 MPIG_\1_\2/' \
	        -e '/^@SKIP /! s/\(^.*$$\)/\1 \1_MPIG/' -e 's/^@SKIP //'

FORCE_TARGET:

