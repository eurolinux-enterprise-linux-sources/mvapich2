# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
top_srcdir      = @top_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
PMPILIBNAME     = @PMPILIBNAME@

CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
DOCTEXT         = @DOCTEXT@
mpi_sources = add_error_code.c add_error_class.c \
 add_error_string.c \
 comm_call_errhandler.c comm_create_errhandler.c \
 comm_get_errhandler.c comm_set_errhandler.c \
 errhandler_create.c errhandler_free.c \
 errhandler_get.c errhandler_set.c error_class.c \
 error_string.c \
 file_create_errhandler.c \
 file_get_errhandler.c file_set_errhandler.c \
 file_call_errhandler.c \
 win_create_errhandler.c win_call_errhandler.c \
 win_get_errhandler.c win_set_errhandler.c 
HEADERS = defmsg.h errcodes.h 
INCLUDES = -I../../include -I${top_srcdir}/src/include

.SUFFIXES:
.SUFFIXES: .o .lo .c .man .html .latex .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
.c.man:
	$(DOCTEXT) -man -mpath ../../../man/man3 -ext 3 -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.c.html:
	$(DOCTEXT) -html -mpath ../../../www/www3  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<
.c.latex:
	$(DOCTEXT) -latex -mpath ../../../doc/refman  -heading MPI \
		-quotefmt ${master_top_srcdir}/maint/docnotes $<

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../ \
	-configdir=. \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../../../ && \
	if [ -x config.status ] ; then CONFIG_FILES=src/mpi/errhan/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 .libstamp2 .libstamp3 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: .libstamp0 ../../../lib/lib${MPILIBNAME}.a
	@if [ -n "@NO_WEAK_SYM@" ] ; then \
	    ${MAKE} .libstamp2 || exit 1; \
	fi
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	    if [ -n "@NO_WEAK_SYM@" ] ; then \
	        ${MAKE} .libstamp3 || exit 1; \
	    fi ; \
	fi

.libstamp0 ../../../lib/lib${MPILIBNAME}.a: add_error_code.o \
	add_error_class.o add_error_string.o comm_call_errhandler.o \
	comm_create_errhandler.o comm_get_errhandler.o comm_set_errhandler.o \
	errhandler_create.o errhandler_free.o errhandler_get.o \
	errhandler_set.o error_class.o error_string.o \
	file_create_errhandler.o file_get_errhandler.o file_set_errhandler.o \
	file_call_errhandler.o win_create_errhandler.o win_call_errhandler.o \
	win_get_errhandler.o win_set_errhandler.o errutil.o dynerrutil.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../lib/lib${MPILIBNAME}.la: add_error_code.lo \
	add_error_class.lo add_error_string.lo comm_call_errhandler.lo \
	comm_create_errhandler.lo comm_get_errhandler.lo \
	comm_set_errhandler.lo errhandler_create.lo errhandler_free.lo \
	errhandler_get.lo errhandler_set.lo error_class.lo error_string.lo \
	file_create_errhandler.lo file_get_errhandler.lo \
	file_set_errhandler.lo file_call_errhandler.lo \
	win_create_errhandler.lo win_call_errhandler.lo win_get_errhandler.lo \
	win_set_errhandler.lo errutil.lo dynerrutil.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1

# --------------------------------------------------------------------------
.libstamp2: _add_error_code.o _add_error_class.o _add_error_string.o \
	_comm_call_errhandler.o _comm_create_errhandler.o \
	_comm_get_errhandler.o _comm_set_errhandler.o _errhandler_create.o \
	_errhandler_free.o _errhandler_get.o _errhandler_set.o _error_class.o \
	_error_string.o _file_create_errhandler.o _file_get_errhandler.o \
	_file_set_errhandler.o _file_call_errhandler.o \
	_win_create_errhandler.o _win_call_errhandler.o _win_get_errhandler.o \
	_win_set_errhandler.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${PMPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${PMPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${PMPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${PMPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${PMPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${PMPILIBNAME}.a
	date > .libstamp2
.libstamp3: _add_error_code.lo _add_error_class.lo _add_error_string.lo \
	_comm_call_errhandler.lo _comm_create_errhandler.lo \
	_comm_get_errhandler.lo _comm_set_errhandler.lo _errhandler_create.lo \
	_errhandler_free.lo _errhandler_get.lo _errhandler_set.lo \
	_error_class.lo _error_string.lo _file_create_errhandler.lo \
	_file_get_errhandler.lo _file_set_errhandler.lo \
	_file_call_errhandler.lo _win_create_errhandler.lo \
	_win_call_errhandler.lo _win_get_errhandler.lo _win_set_errhandler.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${PMPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${PMPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../lib/lib${PMPILIBNAME}.la $?
	date > .libstamp3
_add_error_code.o: add_error_code.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/add_error_code.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_code.c -o _add_error_code.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_code.c -o _add_error_code.o
_add_error_code.lo: add_error_code.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/add_error_code.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_code.c -o _add_error_code.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_code.c -o _add_error_code.lo
_add_error_class.o: add_error_class.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/add_error_class.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_class.c -o _add_error_class.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_class.c -o _add_error_class.o
_add_error_class.lo: add_error_class.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/add_error_class.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_class.c -o _add_error_class.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_class.c -o _add_error_class.lo
_add_error_string.o: add_error_string.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/add_error_string.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_string.c -o _add_error_string.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_string.c -o _add_error_string.o
_add_error_string.lo: add_error_string.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/add_error_string.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_string.c -o _add_error_string.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/add_error_string.c -o _add_error_string.lo
_comm_call_errhandler.o: comm_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_call_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_call_errhandler.c -o _comm_call_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_call_errhandler.c -o _comm_call_errhandler.o
_comm_call_errhandler.lo: comm_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_call_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_call_errhandler.c -o _comm_call_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_call_errhandler.c -o _comm_call_errhandler.lo
_comm_create_errhandler.o: comm_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_create_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_create_errhandler.c -o _comm_create_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_create_errhandler.c -o _comm_create_errhandler.o
_comm_create_errhandler.lo: comm_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_create_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_create_errhandler.c -o _comm_create_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_create_errhandler.c -o _comm_create_errhandler.lo
_comm_get_errhandler.o: comm_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_get_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_errhandler.c -o _comm_get_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_errhandler.c -o _comm_get_errhandler.o
_comm_get_errhandler.lo: comm_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_get_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_errhandler.c -o _comm_get_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_get_errhandler.c -o _comm_get_errhandler.lo
_comm_set_errhandler.o: comm_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/comm_set_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_errhandler.c -o _comm_set_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_errhandler.c -o _comm_set_errhandler.o
_comm_set_errhandler.lo: comm_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/comm_set_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_errhandler.c -o _comm_set_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/comm_set_errhandler.c -o _comm_set_errhandler.lo
_errhandler_create.o: errhandler_create.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhandler_create.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_create.c -o _errhandler_create.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_create.c -o _errhandler_create.o
_errhandler_create.lo: errhandler_create.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhandler_create.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_create.c -o _errhandler_create.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_create.c -o _errhandler_create.lo
_errhandler_free.o: errhandler_free.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhandler_free.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_free.c -o _errhandler_free.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_free.c -o _errhandler_free.o
_errhandler_free.lo: errhandler_free.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhandler_free.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_free.c -o _errhandler_free.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_free.c -o _errhandler_free.lo
_errhandler_get.o: errhandler_get.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhandler_get.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_get.c -o _errhandler_get.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_get.c -o _errhandler_get.o
_errhandler_get.lo: errhandler_get.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhandler_get.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_get.c -o _errhandler_get.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_get.c -o _errhandler_get.lo
_errhandler_set.o: errhandler_set.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/errhandler_set.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_set.c -o _errhandler_set.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_set.c -o _errhandler_set.o
_errhandler_set.lo: errhandler_set.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/errhandler_set.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_set.c -o _errhandler_set.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/errhandler_set.c -o _errhandler_set.lo
_error_class.o: error_class.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/error_class.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_class.c -o _error_class.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_class.c -o _error_class.o
_error_class.lo: error_class.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/error_class.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_class.c -o _error_class.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_class.c -o _error_class.lo
_error_string.o: error_string.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/error_string.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_string.c -o _error_string.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/error_string.c -o _error_string.o
_error_string.lo: error_string.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/error_string.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_string.c -o _error_string.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/error_string.c -o _error_string.lo
_file_create_errhandler.o: file_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_create_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_create_errhandler.c -o _file_create_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_create_errhandler.c -o _file_create_errhandler.o
_file_create_errhandler.lo: file_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_create_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_create_errhandler.c -o _file_create_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_create_errhandler.c -o _file_create_errhandler.lo
_file_get_errhandler.o: file_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_get_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_errhandler.c -o _file_get_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_errhandler.c -o _file_get_errhandler.o
_file_get_errhandler.lo: file_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_get_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_errhandler.c -o _file_get_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_get_errhandler.c -o _file_get_errhandler.lo
_file_set_errhandler.o: file_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_set_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_errhandler.c -o _file_set_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_errhandler.c -o _file_set_errhandler.o
_file_set_errhandler.lo: file_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_set_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_errhandler.c -o _file_set_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_set_errhandler.c -o _file_set_errhandler.lo
_file_call_errhandler.o: file_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/file_call_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_call_errhandler.c -o _file_call_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/file_call_errhandler.c -o _file_call_errhandler.o
_file_call_errhandler.lo: file_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/file_call_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_call_errhandler.c -o _file_call_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/file_call_errhandler.c -o _file_call_errhandler.lo
_win_create_errhandler.o: win_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_create_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_create_errhandler.c -o _win_create_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_create_errhandler.c -o _win_create_errhandler.o
_win_create_errhandler.lo: win_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_create_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_create_errhandler.c -o _win_create_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_create_errhandler.c -o _win_create_errhandler.lo
_win_call_errhandler.o: win_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_call_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_call_errhandler.c -o _win_call_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_call_errhandler.c -o _win_call_errhandler.o
_win_call_errhandler.lo: win_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_call_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_call_errhandler.c -o _win_call_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_call_errhandler.c -o _win_call_errhandler.lo
_win_get_errhandler.o: win_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_get_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_errhandler.c -o _win_get_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_errhandler.c -o _win_get_errhandler.o
_win_get_errhandler.lo: win_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_get_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_errhandler.c -o _win_get_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_get_errhandler.c -o _win_get_errhandler.lo
_win_set_errhandler.o: win_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC             -D<profiling> ${srcdir}/win_set_errhandler.c" ; \
	else \
	  echo $(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_errhandler.c -o _win_set_errhandler.o ; \
	fi
	@$(C_COMPILE) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_errhandler.c -o _win_set_errhandler.o
_win_set_errhandler.lo: win_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo " CC           -D<profiling> $(srcdir)/win_set_errhandler.c" ; \
	else \
	  echo $(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_errhandler.c -o _win_set_errhandler.lo ; \
	fi
	@$(C_COMPILE_SHL) -c @PROFILE_DEF_MPI@ $(srcdir)/win_set_errhandler.c -o _win_set_errhandler.lo
# --------------------------------------------------------------------------
coverage: 
	-@for file in ${mpi_sources} errutil.c dynerrutil.c ; do \
		gcov -b -f $$file ; done
# --------------------------------------------------------------------------
mandoc: ${mpi_sources:.c=.man}
htmldoc: ${mpi_sources:.c=.html}
latexdoc: ${mpi_sources:.c=.latex}
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
$(DEPS_DIR)/add_error_code.d: $(srcdir)/add_error_code.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C add_error_code.c > $(DEPS_DIR)/add_error_code.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_add_error_code.o add_error_code.o add_error_code.lo _add_error_code.lo' $(srcdir)/add_error_code.c >$(DEPS_DIR)/add_error_code.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_add_error_code.o add_error_code.o add_error_code.lo _add_error_code.lo' $(srcdir)/add_error_code.c >$(DEPS_DIR)/add_error_code.d
$(DEPS_DIR)/add_error_class.d: $(srcdir)/add_error_class.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C add_error_class.c > $(DEPS_DIR)/add_error_class.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_add_error_class.o add_error_class.o add_error_class.lo _add_error_class.lo' $(srcdir)/add_error_class.c >$(DEPS_DIR)/add_error_class.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_add_error_class.o add_error_class.o add_error_class.lo _add_error_class.lo' $(srcdir)/add_error_class.c >$(DEPS_DIR)/add_error_class.d
$(DEPS_DIR)/add_error_string.d: $(srcdir)/add_error_string.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C add_error_string.c > $(DEPS_DIR)/add_error_string.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_add_error_string.o add_error_string.o add_error_string.lo _add_error_string.lo' $(srcdir)/add_error_string.c >$(DEPS_DIR)/add_error_string.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_add_error_string.o add_error_string.o add_error_string.lo _add_error_string.lo' $(srcdir)/add_error_string.c >$(DEPS_DIR)/add_error_string.d
$(DEPS_DIR)/comm_call_errhandler.d: $(srcdir)/comm_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_call_errhandler.c > $(DEPS_DIR)/comm_call_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_call_errhandler.o comm_call_errhandler.o comm_call_errhandler.lo _comm_call_errhandler.lo' $(srcdir)/comm_call_errhandler.c >$(DEPS_DIR)/comm_call_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_call_errhandler.o comm_call_errhandler.o comm_call_errhandler.lo _comm_call_errhandler.lo' $(srcdir)/comm_call_errhandler.c >$(DEPS_DIR)/comm_call_errhandler.d
$(DEPS_DIR)/comm_create_errhandler.d: $(srcdir)/comm_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_create_errhandler.c > $(DEPS_DIR)/comm_create_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_create_errhandler.o comm_create_errhandler.o comm_create_errhandler.lo _comm_create_errhandler.lo' $(srcdir)/comm_create_errhandler.c >$(DEPS_DIR)/comm_create_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_create_errhandler.o comm_create_errhandler.o comm_create_errhandler.lo _comm_create_errhandler.lo' $(srcdir)/comm_create_errhandler.c >$(DEPS_DIR)/comm_create_errhandler.d
$(DEPS_DIR)/comm_get_errhandler.d: $(srcdir)/comm_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_get_errhandler.c > $(DEPS_DIR)/comm_get_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_get_errhandler.o comm_get_errhandler.o comm_get_errhandler.lo _comm_get_errhandler.lo' $(srcdir)/comm_get_errhandler.c >$(DEPS_DIR)/comm_get_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_get_errhandler.o comm_get_errhandler.o comm_get_errhandler.lo _comm_get_errhandler.lo' $(srcdir)/comm_get_errhandler.c >$(DEPS_DIR)/comm_get_errhandler.d
$(DEPS_DIR)/comm_set_errhandler.d: $(srcdir)/comm_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_set_errhandler.c > $(DEPS_DIR)/comm_set_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_set_errhandler.o comm_set_errhandler.o comm_set_errhandler.lo _comm_set_errhandler.lo' $(srcdir)/comm_set_errhandler.c >$(DEPS_DIR)/comm_set_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_set_errhandler.o comm_set_errhandler.o comm_set_errhandler.lo _comm_set_errhandler.lo' $(srcdir)/comm_set_errhandler.c >$(DEPS_DIR)/comm_set_errhandler.d
$(DEPS_DIR)/errhandler_create.d: $(srcdir)/errhandler_create.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_create.c > $(DEPS_DIR)/errhandler_create.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_create.o errhandler_create.o errhandler_create.lo _errhandler_create.lo' $(srcdir)/errhandler_create.c >$(DEPS_DIR)/errhandler_create.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_create.o errhandler_create.o errhandler_create.lo _errhandler_create.lo' $(srcdir)/errhandler_create.c >$(DEPS_DIR)/errhandler_create.d
$(DEPS_DIR)/errhandler_free.d: $(srcdir)/errhandler_free.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_free.c > $(DEPS_DIR)/errhandler_free.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_free.o errhandler_free.o errhandler_free.lo _errhandler_free.lo' $(srcdir)/errhandler_free.c >$(DEPS_DIR)/errhandler_free.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_free.o errhandler_free.o errhandler_free.lo _errhandler_free.lo' $(srcdir)/errhandler_free.c >$(DEPS_DIR)/errhandler_free.d
$(DEPS_DIR)/errhandler_get.d: $(srcdir)/errhandler_get.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_get.c > $(DEPS_DIR)/errhandler_get.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_get.o errhandler_get.o errhandler_get.lo _errhandler_get.lo' $(srcdir)/errhandler_get.c >$(DEPS_DIR)/errhandler_get.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_get.o errhandler_get.o errhandler_get.lo _errhandler_get.lo' $(srcdir)/errhandler_get.c >$(DEPS_DIR)/errhandler_get.d
$(DEPS_DIR)/errhandler_set.d: $(srcdir)/errhandler_set.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_set.c > $(DEPS_DIR)/errhandler_set.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_set.o errhandler_set.o errhandler_set.lo _errhandler_set.lo' $(srcdir)/errhandler_set.c >$(DEPS_DIR)/errhandler_set.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_set.o errhandler_set.o errhandler_set.lo _errhandler_set.lo' $(srcdir)/errhandler_set.c >$(DEPS_DIR)/errhandler_set.d
$(DEPS_DIR)/error_class.d: $(srcdir)/error_class.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C error_class.c > $(DEPS_DIR)/error_class.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_error_class.o error_class.o error_class.lo _error_class.lo' $(srcdir)/error_class.c >$(DEPS_DIR)/error_class.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_error_class.o error_class.o error_class.lo _error_class.lo' $(srcdir)/error_class.c >$(DEPS_DIR)/error_class.d
$(DEPS_DIR)/error_string.d: $(srcdir)/error_string.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C error_string.c > $(DEPS_DIR)/error_string.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_error_string.o error_string.o error_string.lo _error_string.lo' $(srcdir)/error_string.c >$(DEPS_DIR)/error_string.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_error_string.o error_string.o error_string.lo _error_string.lo' $(srcdir)/error_string.c >$(DEPS_DIR)/error_string.d
$(DEPS_DIR)/file_create_errhandler.d: $(srcdir)/file_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_create_errhandler.c > $(DEPS_DIR)/file_create_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_create_errhandler.o file_create_errhandler.o file_create_errhandler.lo _file_create_errhandler.lo' $(srcdir)/file_create_errhandler.c >$(DEPS_DIR)/file_create_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_create_errhandler.o file_create_errhandler.o file_create_errhandler.lo _file_create_errhandler.lo' $(srcdir)/file_create_errhandler.c >$(DEPS_DIR)/file_create_errhandler.d
$(DEPS_DIR)/file_get_errhandler.d: $(srcdir)/file_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_get_errhandler.c > $(DEPS_DIR)/file_get_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_get_errhandler.o file_get_errhandler.o file_get_errhandler.lo _file_get_errhandler.lo' $(srcdir)/file_get_errhandler.c >$(DEPS_DIR)/file_get_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_get_errhandler.o file_get_errhandler.o file_get_errhandler.lo _file_get_errhandler.lo' $(srcdir)/file_get_errhandler.c >$(DEPS_DIR)/file_get_errhandler.d
$(DEPS_DIR)/file_set_errhandler.d: $(srcdir)/file_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_set_errhandler.c > $(DEPS_DIR)/file_set_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_set_errhandler.o file_set_errhandler.o file_set_errhandler.lo _file_set_errhandler.lo' $(srcdir)/file_set_errhandler.c >$(DEPS_DIR)/file_set_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_set_errhandler.o file_set_errhandler.o file_set_errhandler.lo _file_set_errhandler.lo' $(srcdir)/file_set_errhandler.c >$(DEPS_DIR)/file_set_errhandler.d
$(DEPS_DIR)/file_call_errhandler.d: $(srcdir)/file_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_call_errhandler.c > $(DEPS_DIR)/file_call_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_call_errhandler.o file_call_errhandler.o file_call_errhandler.lo _file_call_errhandler.lo' $(srcdir)/file_call_errhandler.c >$(DEPS_DIR)/file_call_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_call_errhandler.o file_call_errhandler.o file_call_errhandler.lo _file_call_errhandler.lo' $(srcdir)/file_call_errhandler.c >$(DEPS_DIR)/file_call_errhandler.d
$(DEPS_DIR)/win_create_errhandler.d: $(srcdir)/win_create_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_create_errhandler.c > $(DEPS_DIR)/win_create_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_create_errhandler.o win_create_errhandler.o win_create_errhandler.lo _win_create_errhandler.lo' $(srcdir)/win_create_errhandler.c >$(DEPS_DIR)/win_create_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_create_errhandler.o win_create_errhandler.o win_create_errhandler.lo _win_create_errhandler.lo' $(srcdir)/win_create_errhandler.c >$(DEPS_DIR)/win_create_errhandler.d
$(DEPS_DIR)/win_call_errhandler.d: $(srcdir)/win_call_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_call_errhandler.c > $(DEPS_DIR)/win_call_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_call_errhandler.o win_call_errhandler.o win_call_errhandler.lo _win_call_errhandler.lo' $(srcdir)/win_call_errhandler.c >$(DEPS_DIR)/win_call_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_call_errhandler.o win_call_errhandler.o win_call_errhandler.lo _win_call_errhandler.lo' $(srcdir)/win_call_errhandler.c >$(DEPS_DIR)/win_call_errhandler.d
$(DEPS_DIR)/win_get_errhandler.d: $(srcdir)/win_get_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_get_errhandler.c > $(DEPS_DIR)/win_get_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_get_errhandler.o win_get_errhandler.o win_get_errhandler.lo _win_get_errhandler.lo' $(srcdir)/win_get_errhandler.c >$(DEPS_DIR)/win_get_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_get_errhandler.o win_get_errhandler.o win_get_errhandler.lo _win_get_errhandler.lo' $(srcdir)/win_get_errhandler.c >$(DEPS_DIR)/win_get_errhandler.d
$(DEPS_DIR)/win_set_errhandler.d: $(srcdir)/win_set_errhandler.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_set_errhandler.c > $(DEPS_DIR)/win_set_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_set_errhandler.o win_set_errhandler.o win_set_errhandler.lo _win_set_errhandler.lo' $(srcdir)/win_set_errhandler.c >$(DEPS_DIR)/win_set_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_set_errhandler.o win_set_errhandler.o win_set_errhandler.lo _win_set_errhandler.lo' $(srcdir)/win_set_errhandler.c >$(DEPS_DIR)/win_set_errhandler.d
$(DEPS_DIR)/errutil.d: $(srcdir)/errutil.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errutil.c > $(DEPS_DIR)/errutil.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errutil.o errutil.o errutil.lo _errutil.lo' $(srcdir)/errutil.c >$(DEPS_DIR)/errutil.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errutil.o errutil.o errutil.lo _errutil.lo' $(srcdir)/errutil.c >$(DEPS_DIR)/errutil.d
$(DEPS_DIR)/dynerrutil.d: $(srcdir)/dynerrutil.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C dynerrutil.c > $(DEPS_DIR)/dynerrutil.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_dynerrutil.o dynerrutil.o dynerrutil.lo _dynerrutil.lo' $(srcdir)/dynerrutil.c >$(DEPS_DIR)/dynerrutil.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_dynerrutil.o dynerrutil.o dynerrutil.lo _dynerrutil.lo' $(srcdir)/dynerrutil.c >$(DEPS_DIR)/dynerrutil.d
$(DEPS_DIR)/timestamp: ${mpi_sources} errutil.c dynerrutil.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C add_error_code.c > $(DEPS_DIR)/add_error_code.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_add_error_code.o add_error_code.o add_error_code.lo _add_error_code.lo' $(srcdir)/add_error_code.c >$(DEPS_DIR)/add_error_code.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_add_error_code.o add_error_code.o add_error_code.lo _add_error_code.lo' $(srcdir)/add_error_code.c >$(DEPS_DIR)/add_error_code.d
	echo "include $(DEPS_DIR)/add_error_code.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C add_error_class.c > $(DEPS_DIR)/add_error_class.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_add_error_class.o add_error_class.o add_error_class.lo _add_error_class.lo' $(srcdir)/add_error_class.c >$(DEPS_DIR)/add_error_class.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_add_error_class.o add_error_class.o add_error_class.lo _add_error_class.lo' $(srcdir)/add_error_class.c >$(DEPS_DIR)/add_error_class.d
	echo "include $(DEPS_DIR)/add_error_class.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C add_error_string.c > $(DEPS_DIR)/add_error_string.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_add_error_string.o add_error_string.o add_error_string.lo _add_error_string.lo' $(srcdir)/add_error_string.c >$(DEPS_DIR)/add_error_string.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_add_error_string.o add_error_string.o add_error_string.lo _add_error_string.lo' $(srcdir)/add_error_string.c >$(DEPS_DIR)/add_error_string.d
	echo "include $(DEPS_DIR)/add_error_string.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_call_errhandler.c > $(DEPS_DIR)/comm_call_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_call_errhandler.o comm_call_errhandler.o comm_call_errhandler.lo _comm_call_errhandler.lo' $(srcdir)/comm_call_errhandler.c >$(DEPS_DIR)/comm_call_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_call_errhandler.o comm_call_errhandler.o comm_call_errhandler.lo _comm_call_errhandler.lo' $(srcdir)/comm_call_errhandler.c >$(DEPS_DIR)/comm_call_errhandler.d
	echo "include $(DEPS_DIR)/comm_call_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_create_errhandler.c > $(DEPS_DIR)/comm_create_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_create_errhandler.o comm_create_errhandler.o comm_create_errhandler.lo _comm_create_errhandler.lo' $(srcdir)/comm_create_errhandler.c >$(DEPS_DIR)/comm_create_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_create_errhandler.o comm_create_errhandler.o comm_create_errhandler.lo _comm_create_errhandler.lo' $(srcdir)/comm_create_errhandler.c >$(DEPS_DIR)/comm_create_errhandler.d
	echo "include $(DEPS_DIR)/comm_create_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_get_errhandler.c > $(DEPS_DIR)/comm_get_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_get_errhandler.o comm_get_errhandler.o comm_get_errhandler.lo _comm_get_errhandler.lo' $(srcdir)/comm_get_errhandler.c >$(DEPS_DIR)/comm_get_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_get_errhandler.o comm_get_errhandler.o comm_get_errhandler.lo _comm_get_errhandler.lo' $(srcdir)/comm_get_errhandler.c >$(DEPS_DIR)/comm_get_errhandler.d
	echo "include $(DEPS_DIR)/comm_get_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C comm_set_errhandler.c > $(DEPS_DIR)/comm_set_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_comm_set_errhandler.o comm_set_errhandler.o comm_set_errhandler.lo _comm_set_errhandler.lo' $(srcdir)/comm_set_errhandler.c >$(DEPS_DIR)/comm_set_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_comm_set_errhandler.o comm_set_errhandler.o comm_set_errhandler.lo _comm_set_errhandler.lo' $(srcdir)/comm_set_errhandler.c >$(DEPS_DIR)/comm_set_errhandler.d
	echo "include $(DEPS_DIR)/comm_set_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_create.c > $(DEPS_DIR)/errhandler_create.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_create.o errhandler_create.o errhandler_create.lo _errhandler_create.lo' $(srcdir)/errhandler_create.c >$(DEPS_DIR)/errhandler_create.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_create.o errhandler_create.o errhandler_create.lo _errhandler_create.lo' $(srcdir)/errhandler_create.c >$(DEPS_DIR)/errhandler_create.d
	echo "include $(DEPS_DIR)/errhandler_create.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_free.c > $(DEPS_DIR)/errhandler_free.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_free.o errhandler_free.o errhandler_free.lo _errhandler_free.lo' $(srcdir)/errhandler_free.c >$(DEPS_DIR)/errhandler_free.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_free.o errhandler_free.o errhandler_free.lo _errhandler_free.lo' $(srcdir)/errhandler_free.c >$(DEPS_DIR)/errhandler_free.d
	echo "include $(DEPS_DIR)/errhandler_free.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_get.c > $(DEPS_DIR)/errhandler_get.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_get.o errhandler_get.o errhandler_get.lo _errhandler_get.lo' $(srcdir)/errhandler_get.c >$(DEPS_DIR)/errhandler_get.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_get.o errhandler_get.o errhandler_get.lo _errhandler_get.lo' $(srcdir)/errhandler_get.c >$(DEPS_DIR)/errhandler_get.d
	echo "include $(DEPS_DIR)/errhandler_get.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errhandler_set.c > $(DEPS_DIR)/errhandler_set.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errhandler_set.o errhandler_set.o errhandler_set.lo _errhandler_set.lo' $(srcdir)/errhandler_set.c >$(DEPS_DIR)/errhandler_set.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errhandler_set.o errhandler_set.o errhandler_set.lo _errhandler_set.lo' $(srcdir)/errhandler_set.c >$(DEPS_DIR)/errhandler_set.d
	echo "include $(DEPS_DIR)/errhandler_set.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C error_class.c > $(DEPS_DIR)/error_class.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_error_class.o error_class.o error_class.lo _error_class.lo' $(srcdir)/error_class.c >$(DEPS_DIR)/error_class.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_error_class.o error_class.o error_class.lo _error_class.lo' $(srcdir)/error_class.c >$(DEPS_DIR)/error_class.d
	echo "include $(DEPS_DIR)/error_class.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C error_string.c > $(DEPS_DIR)/error_string.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_error_string.o error_string.o error_string.lo _error_string.lo' $(srcdir)/error_string.c >$(DEPS_DIR)/error_string.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_error_string.o error_string.o error_string.lo _error_string.lo' $(srcdir)/error_string.c >$(DEPS_DIR)/error_string.d
	echo "include $(DEPS_DIR)/error_string.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_create_errhandler.c > $(DEPS_DIR)/file_create_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_create_errhandler.o file_create_errhandler.o file_create_errhandler.lo _file_create_errhandler.lo' $(srcdir)/file_create_errhandler.c >$(DEPS_DIR)/file_create_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_create_errhandler.o file_create_errhandler.o file_create_errhandler.lo _file_create_errhandler.lo' $(srcdir)/file_create_errhandler.c >$(DEPS_DIR)/file_create_errhandler.d
	echo "include $(DEPS_DIR)/file_create_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_get_errhandler.c > $(DEPS_DIR)/file_get_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_get_errhandler.o file_get_errhandler.o file_get_errhandler.lo _file_get_errhandler.lo' $(srcdir)/file_get_errhandler.c >$(DEPS_DIR)/file_get_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_get_errhandler.o file_get_errhandler.o file_get_errhandler.lo _file_get_errhandler.lo' $(srcdir)/file_get_errhandler.c >$(DEPS_DIR)/file_get_errhandler.d
	echo "include $(DEPS_DIR)/file_get_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_set_errhandler.c > $(DEPS_DIR)/file_set_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_set_errhandler.o file_set_errhandler.o file_set_errhandler.lo _file_set_errhandler.lo' $(srcdir)/file_set_errhandler.c >$(DEPS_DIR)/file_set_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_set_errhandler.o file_set_errhandler.o file_set_errhandler.lo _file_set_errhandler.lo' $(srcdir)/file_set_errhandler.c >$(DEPS_DIR)/file_set_errhandler.d
	echo "include $(DEPS_DIR)/file_set_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C file_call_errhandler.c > $(DEPS_DIR)/file_call_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_file_call_errhandler.o file_call_errhandler.o file_call_errhandler.lo _file_call_errhandler.lo' $(srcdir)/file_call_errhandler.c >$(DEPS_DIR)/file_call_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_file_call_errhandler.o file_call_errhandler.o file_call_errhandler.lo _file_call_errhandler.lo' $(srcdir)/file_call_errhandler.c >$(DEPS_DIR)/file_call_errhandler.d
	echo "include $(DEPS_DIR)/file_call_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_create_errhandler.c > $(DEPS_DIR)/win_create_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_create_errhandler.o win_create_errhandler.o win_create_errhandler.lo _win_create_errhandler.lo' $(srcdir)/win_create_errhandler.c >$(DEPS_DIR)/win_create_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_create_errhandler.o win_create_errhandler.o win_create_errhandler.lo _win_create_errhandler.lo' $(srcdir)/win_create_errhandler.c >$(DEPS_DIR)/win_create_errhandler.d
	echo "include $(DEPS_DIR)/win_create_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_call_errhandler.c > $(DEPS_DIR)/win_call_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_call_errhandler.o win_call_errhandler.o win_call_errhandler.lo _win_call_errhandler.lo' $(srcdir)/win_call_errhandler.c >$(DEPS_DIR)/win_call_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_call_errhandler.o win_call_errhandler.o win_call_errhandler.lo _win_call_errhandler.lo' $(srcdir)/win_call_errhandler.c >$(DEPS_DIR)/win_call_errhandler.d
	echo "include $(DEPS_DIR)/win_call_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_get_errhandler.c > $(DEPS_DIR)/win_get_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_get_errhandler.o win_get_errhandler.o win_get_errhandler.lo _win_get_errhandler.lo' $(srcdir)/win_get_errhandler.c >$(DEPS_DIR)/win_get_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_get_errhandler.o win_get_errhandler.o win_get_errhandler.lo _win_get_errhandler.lo' $(srcdir)/win_get_errhandler.c >$(DEPS_DIR)/win_get_errhandler.d
	echo "include $(DEPS_DIR)/win_get_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C win_set_errhandler.c > $(DEPS_DIR)/win_set_errhandler.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_win_set_errhandler.o win_set_errhandler.o win_set_errhandler.lo _win_set_errhandler.lo' $(srcdir)/win_set_errhandler.c >$(DEPS_DIR)/win_set_errhandler.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_win_set_errhandler.o win_set_errhandler.o win_set_errhandler.lo _win_set_errhandler.lo' $(srcdir)/win_set_errhandler.c >$(DEPS_DIR)/win_set_errhandler.d
	echo "include $(DEPS_DIR)/win_set_errhandler.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C errutil.c > $(DEPS_DIR)/errutil.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_errutil.o errutil.o errutil.lo _errutil.lo' $(srcdir)/errutil.c >$(DEPS_DIR)/errutil.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_errutil.o errutil.o errutil.lo _errutil.lo' $(srcdir)/errutil.c >$(DEPS_DIR)/errutil.d
	echo "include $(DEPS_DIR)/errutil.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C dynerrutil.c > $(DEPS_DIR)/dynerrutil.d" ; \
	else \
	  echo $(MAKE_DEPEND_C) -MT '_dynerrutil.o dynerrutil.o dynerrutil.lo _dynerrutil.lo' $(srcdir)/dynerrutil.c >$(DEPS_DIR)/dynerrutil.d ; \
	fi
	@$(MAKE_DEPEND_C) -MT '_dynerrutil.o dynerrutil.o dynerrutil.lo _dynerrutil.lo' $(srcdir)/dynerrutil.c >$(DEPS_DIR)/dynerrutil.d
	echo "include $(DEPS_DIR)/dynerrutil.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  add_error_code.c add_error_class.c add_error_string.c \
	comm_call_errhandler.c comm_create_errhandler.c comm_get_errhandler.c \
	comm_set_errhandler.c errhandler_create.c errhandler_free.c \
	errhandler_get.c errhandler_set.c error_class.c error_string.c \
	file_create_errhandler.c file_get_errhandler.c file_set_errhandler.c \
	file_call_errhandler.c win_create_errhandler.c win_call_errhandler.c \
	win_get_errhandler.c win_set_errhandler.c errutil.c dynerrutil.c 
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------
#

FORCE_TARGET:

