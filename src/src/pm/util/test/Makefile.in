# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
master_top_srcdir  = @master_top_srcdir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_LINK         = $(CC)
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LDFLAGS     =  @LDFLAGS@ 

VPATH = .:@srcdir@
INCLUDES = -I.. -I$(srcdir)/..

.SUFFIXES:
.SUFFIXES: .o .lo .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../../ \
	-configdir=src/pm/util/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile test/Makefile config.status config.log config.cache *conf.cache config.system" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-cd ../ && \
	if [ -x config.status ] ; then CONFIG_FILES=test/Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
clean: 
	-@rm -f *.o ${srcdir}/*.o servtest argstest servtest2 forktest
	-@rm -f servtest.exe argstest.exe servtest2.exe forktest.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
	-@rm -f *.irlog*
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-xxx remove-genmakefiles
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: argstest forktest servtest servtest2

coverage: 
servtest: servtest.o  ../libmpiexec.a  
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o servtest servtest.o  -L.. \
	-lmpiexec -L../../../../lib -lmpich ${LIBS} 
argstest: argstest.o  ../libmpiexec.a  
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o argstest argstest.o  -L.. \
	-lmpiexec -L../../../../lib -lmpich ${LIBS} 
servtest2: servtest2.o  ../libmpiexec.a  
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o servtest2 servtest2.o  -L.. \
	-lmpiexec -L../../../../lib -lmpich ${LIBS} 
forktest: forktest.o  ../libmpiexec.a  
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o forktest forktest.o  -L.. \
	-lmpiexec -L../../../../lib -lmpich ${LIBS} 
# --------------------------------------------------------------------------
htmldoc:
mandoc:
latexdoc:
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  argstest.c forktest.c servtest.c servtest2.c
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------




FORCE_TARGET:

