# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@ $(MPICH2_MAKE_CFLAGS)
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
smpd_sock_dir = ${master_top_srcdir}/src/pm/smpd/sock/poll
INCLUDES = -I${master_top_srcdir}/src/include -I${master_top_srcdir}/src/pm/smpd -I${master_top_srcdir}/src/pm/smpd/sock/include -I${master_top_srcdir}/src/pm/smpd/sock/poll -I${top_builddir}/src/include -I${top_builddir}/src/pm/smpd -I${top_builddir}/src/pm/smpd/sock/poll

.SUFFIXES:
.SUFFIXES: .o .lo .c .txt 
.c.o:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c.txt:
	$(CPP) $(INCLUDES) $(CPPFLAGS) $< >$*.txt
.c:
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS) ; \
	fi
	@$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)

${srcdir}/pmiconf.h  ${srcdir}/configure: ${srcdir}/configure.in 
	@rm -rf autom4te*.cache
	(cd ${srcdir} && autoheader -I ../../../confdb && \
	autoconf -I \
	../../../confdb ) 

# --------------------------------------------------------------------------
${srcdir}/Makefile.in: ${srcdir}/Makefile.sm
	( cd ${srcdir} && ${master_top_srcdir}/maint/simplemake \
	-rootdir=../../../ \
	-configdir=src/pmi/smpd/ \
	-common=${master_top_srcdir}/maint/makedefs \
	-docnamedefs=${master_top_srcdir}/maint/docnotes \
	"-autoconf=-I ROOTDIR/confdb" \
	-libdir='$${MPILIBNAME}=ROOTDIR/lib' \
	-smroot=${master_top_srcdir}/maint \
	-distcleanfiles="Makefile localdefs config.status config.log config.cache *conf.cache config.system" \
	-smvar_doc_attop=0 \
		Makefile.sm )
Makefile: ${srcdir}/Makefile.in
	-if [ -x config.status ] ; then CONFIG_FILES=Makefile CONFIG_HEADERS= ${SHELL} ./config.status ; fi
# --------------------------------------------------------------------------
apply: 
	$(ACTION) $(ACTION_INPUT)
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} apply ) ; done
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg ${srcdir}/*.da
	-@rm -f ${srcdir}/*.gcda ${srcdir}/*.gcno
	-@rm -f *.gcov *.bb *.bbg *.da *.gcda *.gcno
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} clean ) ; done
distclean:  clean distclean-local distclean-xxx remove-makefile
distclean-xxx:
	for dir in ${smpd_sock_dir} ; do \
		if [ ! -s $$dir/Makefile ] ; then continue ; fi ;\
		(cd $$dir && ${MAKE} distclean ) ; done
	-@rm -f Makefile localdefs config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -f pmiconf.h
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
maintainer-clean: clean distclean-local distclean-xxx remove-genmakefiles
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} maintainer-clean ) ; done
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile.in Makefile
all-redirect: .libstamp0 ../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 || exit 1; \
	fi

.libstamp0 ../../../lib/lib${MPILIBNAME}.a: smpd_pmi.o smpd_ipmi.o 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.a $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.a $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.a $?
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  RANLIB          lib${MPILIBNAME}.a" ; \
	else \
	  echo ${RANLIB} ../../../lib/lib${MPILIBNAME}.a ; \
	fi
	@${RANLIB} ../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../lib/lib${MPILIBNAME}.la: smpd_pmi.lo smpd_ipmi.lo 
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "  AR cr ../../../lib/lib${MPILIBNAME}.la $?" ; \
	else \
	  echo ${AR} cr ../../../lib/lib${MPILIBNAME}.la $? ; \
	fi
	@${AR} cr ../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
coverage: 
	-@for file in smpd_pmi.c smpd_ipmi.c ; do \
		gcov -b -f $$file ; done
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} coverage ) ; done
# --------------------------------------------------------------------------
htmldoc:
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} htmldoc ) ; done
mandoc:
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} mandoc ) ; done
latexdoc:
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} latexdoc ) ; done
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# Dependencies
DEPS_DIR = .deps
MAKE_DEPEND_C   = @MAKE_DEPEND_C@ $(DEFS) $(INCLUDES) $(CPPFLAGS)

dependencies: $(DEPS_DIR)/timestamp
	for dir in ${smpd_sock_dir} ; do \
		(cd $$dir && ${MAKE} dependencies ) ; done
$(DEPS_DIR)/smpd_pmi.d: $(srcdir)/smpd_pmi.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C smpd_pmi.c > $(DEPS_DIR)/smpd_pmi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/smpd_pmi.c >$(DEPS_DIR)/smpd_pmi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/smpd_pmi.c >$(DEPS_DIR)/smpd_pmi.d
$(DEPS_DIR)/smpd_ipmi.d: $(srcdir)/smpd_ipmi.c
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C smpd_ipmi.c > $(DEPS_DIR)/smpd_ipmi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/smpd_ipmi.c >$(DEPS_DIR)/smpd_ipmi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/smpd_ipmi.c >$(DEPS_DIR)/smpd_ipmi.d
$(DEPS_DIR)/timestamp: smpd_pmi.c smpd_ipmi.c Makefile
	rm -f $(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C smpd_pmi.c > $(DEPS_DIR)/smpd_pmi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/smpd_pmi.c >$(DEPS_DIR)/smpd_pmi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/smpd_pmi.c >$(DEPS_DIR)/smpd_pmi.d
	echo "include $(DEPS_DIR)/smpd_pmi.d" >>$(DEPS_DIR)/newalldeps
	@if [ "x$(VERBOSE)" != "x1" -a "x$(V)" != "x1" ] ; then \
	  echo "MAKE_DEPEND_C smpd_ipmi.c > $(DEPS_DIR)/smpd_ipmi.d" ; \
	else \
	  echo $(MAKE_DEPEND_C)  $(srcdir)/smpd_ipmi.c >$(DEPS_DIR)/smpd_ipmi.d ; \
	fi
	@$(MAKE_DEPEND_C)  $(srcdir)/smpd_ipmi.c >$(DEPS_DIR)/smpd_ipmi.d
	echo "include $(DEPS_DIR)/smpd_ipmi.d" >>$(DEPS_DIR)/newalldeps
	if [ -s $(DEPS_DIR)/newalldeps ] ; then mv -f $(DEPS_DIR)/newalldeps $(DEPS_DIR)/alldeps ; fi
	date >$(DEPS_DIR)/timestamp
include $(DEPS_DIR)/alldeps
# End of Dependencies
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  smpd_pmi.c smpd_ipmi.c
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
# --------------------------------------------------------------------------



distclean-local:
	@-rm -f pmiconf.h

FORCE_TARGET:

