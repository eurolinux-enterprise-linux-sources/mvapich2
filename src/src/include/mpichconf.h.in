/* src/include/mpichconf.h.in.  Generated from configure.in by autoheader.  */

/* -*- Mode: C; c-basic-offset:4 ; -*- */
/* Copyright (c) 2003-2011, The Ohio State University. All rights
 * reserved.
 *
 * This file is part of the MVAPICH2 software package developed by the
 * team members of The Ohio State University's Network-Based Computing
 * Laboratory (NBCL), headed by Professor Dhabaleswar K. (DK) Panda.
 *
 * For detailed copyright and licensing information, please refer to the
 * copyright file COPYRIGHT in the top level MVAPICH2 directory.
 *
 */
/*  
 *  (C) 2001 by Argonne National Laboratory.
 *      See COPYRIGHT in top-level directory.
 */
#ifndef MPICHCONF_H_INCLUDED
#define MPICHCONF_H_INCLUDED


/* define if char * is byte pointer */
#undef CHAR_PTR_IS_BYTE

/* define to enable collection of statistics */
#undef COLLECT_STATS

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#undef C_ALLOCA

/* The value of false in Fortran */
#undef F77_FALSE_VALUE

/* Define if Fortran names are lowercase */
#undef F77_NAME_LOWER

/* Define if Fortran names containing an underscore have two trailing
   underscores */
#undef F77_NAME_LOWER_2USCORE

/* Define if Fortran names are lowercase with a trailing underscore */
#undef F77_NAME_LOWER_USCORE

/* Define if Fortran names preserve the original case */
#undef F77_NAME_MIXED

/* Define if Fortran names preserve the original case and add a trailing
   underscore */
#undef F77_NAME_MIXED_USCORE

/* Define if Fortran names are uppercase */
#undef F77_NAME_UPPER

/* The value of true in Fortran */
#undef F77_TRUE_VALUE

/* Define if we know the value of Fortran true and false */
#undef F77_TRUE_VALUE_SET

/* Directory to use in namepub */
#undef FILE_NAMEPUB_BASEDIR

/* Define if addresses are larger than Fortran integers */
#undef HAVE_AINT_LARGER_THAN_FINT

/* Define to 1 if you have the `alarm' function. */
#undef HAVE_ALARM

/* Define to 1 if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#undef HAVE_ALLOCA_H

/* Define if int32_t works with any alignment */
#undef HAVE_ANY_INT32_T_ALIGNMENT

/* Define if int64_t works with any alignment */
#undef HAVE_ANY_INT64_T_ALIGNMENT

/* Define to 1 if you have the <assert.h> header file. */
#undef HAVE_ASSERT_H

/* Define to 1 if you have the `bindprocessor' function. */
#undef HAVE_BINDPROCESSOR

/* define if the compiler defines __FUNC__ */
#undef HAVE_CAP__FUNC__

/* Define to 1 if you have the `clock_getres' function. */
#undef HAVE_CLOCK_GETRES

/* Define to 1 if you have the `clock_gettime' function. */
#undef HAVE_CLOCK_GETTIME

/* Define if CPU_SET and CPU_ZERO defined */
#undef HAVE_CPU_SET_MACROS

/* Define if cpu_set_t is defined in sched.h */
#undef HAVE_CPU_SET_T

/* Define if C++ is supported */
#undef HAVE_CXX_BINDING

/* Define is C++ supports complex types */
#undef HAVE_CXX_COMPLEX

/* define if the compiler supports exceptions */
#undef HAVE_CXX_EXCEPTIONS

/* Define if debugger support is included */
#undef HAVE_DEBUGGER_SUPPORT

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the `dlopen' function. */
#undef HAVE_DLOPEN

/* Define to 1 if you have the `dlsym' function. */
#undef HAVE_DLSYM

/* Controls how alignment of doubles is performed, separate from other FP
   values */
#undef HAVE_DOUBLE_ALIGNMENT_EXCEPTION

/* Controls how alignment is applied based on position of doubles in the
   structure */
#undef HAVE_DOUBLE_POS_ALIGNMENT

/* Define to 1 if the system has the type `double _Complex'. */
#undef HAVE_DOUBLE__COMPLEX

/* Define to 1 if you have the <endian.h> header file. */
#undef HAVE_ENDIAN_H

/* Define to 1 if you have the <errno.h> header file. */
#undef HAVE_ERRNO_H

/* Define to enable error checking */
#undef HAVE_ERROR_CHECKING

/* Define if F90 type routines available */
#undef HAVE_F90_TYPE_ROUTINES

/* Define to 1 if you have the `fdopen' function. */
#undef HAVE_FDOPEN

/* Define if Fortran integer are the same size as C ints */
#undef HAVE_FINT_IS_INT

/* Define to 1 if the system has the type `float _Complex'. */
#undef HAVE_FLOAT__COMPLEX

/* Define if Fortran is supported */
#undef HAVE_FORTRAN_BINDING

/* Define if using gcc on a system with an IA64 class chip */
#undef HAVE_GCC_AND_IA64_ASM

/* Define if using gcc on a system with an Intel Pentium class chip */
#undef HAVE_GCC_AND_PENTIUM_ASM

/* Define if using gcc on a system with an AMD x86_64 class chip */
#undef HAVE_GCC_AND_X86_64_ASM

/* Define if GNU __attribute__ is supported */
#undef HAVE_GCC_ATTRIBUTE

/* Define to 1 if you have the `gethrtime' function. */
#undef HAVE_GETHRTIME

/* Define to 1 if you have the `getpid' function. */
#undef HAVE_GETPID

/* Define to 1 if you have the `gettimeofday' function. */
#undef HAVE_GETTIMEOFDAY

/* Define if int16_t is supported by the C compiler */
#undef HAVE_INT16_T

/* Define if int32_t is supported by the C compiler */
#undef HAVE_INT32_T

/* Define if int64_t is supported by the C compiler */
#undef HAVE_INT64_T

/* Define if int8_t is supported by the C compiler */
#undef HAVE_INT8_T

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define when alignment of structures is based on largest component */
#undef HAVE_LARGEST_STRUCT_ALIGNMENT

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Controls how alignment is applied based on position of long long ints in
   the structure */
#undef HAVE_LLINT_POS_ALIGNMENT

/* Define if long double is supported */
#undef HAVE_LONG_DOUBLE

/* Define to 1 if the system has the type `long double _Complex'. */
#undef HAVE_LONG_DOUBLE__COMPLEX

/* Define if long long allowed */
#undef HAVE_LONG_LONG

/* Define if long long is supported */
#undef HAVE_LONG_LONG_INT

/* Define if C99-style variable argument list macro functionality */
#undef HAVE_MACRO_VA_ARGS

/* Controls byte alignment of structs with doubles */
#undef HAVE_MAX_DOUBLE_FP_ALIGNMENT

/* Controls byte alignment of structures with floats, doubles, and long
   doubles (for MPI structs) */
#undef HAVE_MAX_FP_ALIGNMENT

/* Controls byte alignment of integer structures (for MPI structs) */
#undef HAVE_MAX_INTEGER_ALIGNMENT

/* Controls byte alignment of structs with long doubles */
#undef HAVE_MAX_LONG_DOUBLE_FP_ALIGNMENT

/* Controls byte alignment of structures (for aligning allocated structures)
   */
#undef HAVE_MAX_STRUCT_ALIGNMENT

/* Define to 1 if you have the <memcheck.h> header file. */
#undef HAVE_MEMCHECK_H

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `mkstemp' function. */
#undef HAVE_MKSTEMP

/* Define so that we can test whether the mpichconf.h file has been included
   */
#undef HAVE_MPICHCONF

/* Define if the Fortran init code for MPI works from C programs without
   special libraries */
#undef HAVE_MPI_F_INIT_WORKS_WITH_C

/* Define if multiple weak symbols may be defined */
#undef HAVE_MULTIPLE_PRAGMA_WEAK

/* Define if a name publishing service is available */
#undef HAVE_NAMEPUB_SERVICE

/* define if the compiler implements namespaces */
#undef HAVE_NAMESPACES

/* define if the compiler implements namespace std */
#undef HAVE_NAMESPACE_STD

/* Define if the Fortran types are not available in C */
#undef HAVE_NO_FORTRAN_MPI_TYPES_IN_C

/* Define is the OSX thread affinity policy macros defined */
#undef HAVE_OSX_THREAD_AFFINITY

/* Cray style weak pragma */
#undef HAVE_PRAGMA_CRI_DUP

/* HP style weak pragma */
#undef HAVE_PRAGMA_HP_SEC_DEF

/* Supports weak pragma */
#undef HAVE_PRAGMA_WEAK

/* Define to 1 if you have the `pthread_cleanup_push' function. */
#undef HAVE_PTHREAD_CLEANUP_PUSH

/* Define if pthread_cleanup_push is available, even as a macro */
#undef HAVE_PTHREAD_CLEANUP_PUSH_MACRO

/* Define to 1 if you have the <pthread.h> header file. */
#undef HAVE_PTHREAD_H

/* Define if PTHREAD_MUTEX_RECURSIVE is available in pthread.h */
#undef HAVE_PTHREAD_MUTEX_RECURSIVE

/* Define if PTHREAD_MUTEX_RECURSIVE_NP is available in pthread.h */
#undef HAVE_PTHREAD_MUTEX_RECURSIVE_NP

/* Define to 1 if you have the `pthread_yield' function. */
#undef HAVE_PTHREAD_YIELD

/* Define to 1 if you have the `putenv' function. */
#undef HAVE_PUTENV

/* Define if ROMIO is enabled */
#undef HAVE_ROMIO

/* Define if MPI supports MPI_THREAD_MULTIPLE with a runtime check for thread
   level */
#undef HAVE_RUNTIME_THREADCHECK

/* Define to 1 if you have the `sched_getaffinity' function. */
#undef HAVE_SCHED_GETAFFINITY

/* Define to 1 if you have the `sched_setaffinity' function. */
#undef HAVE_SCHED_SETAFFINITY

/* Define to 1 if you have the `sched_yield' function. */
#undef HAVE_SCHED_YIELD

/* Define to 1 if you have the <search> header file. */
#undef HAVE_SEARCH

/* Define to 1 if you have the `select' function. */
#undef HAVE_SELECT

/* Define to 1 if you have the `setitimer' function. */
#undef HAVE_SETITIMER

/* Define to 1 if you have the `sleep' function. */
#undef HAVE_SLEEP

/* Define to 1 if you have the `snprintf' function. */
#undef HAVE_SNPRINTF

/* Define to 1 if you have the <stdarg.h> header file. */
#undef HAVE_STDARG_H

/* Define to 1 if you have the <stddef.h> header file. */
#undef HAVE_STDDEF_H

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the `strdup' function. */
#undef HAVE_STRDUP

/* Define to 1 if you have the `strerror' function. */
#undef HAVE_STRERROR

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the `strncasecmp' function. */
#undef HAVE_STRNCASECMP

/* Define if sys/bitypes.h exists */
#undef HAVE_SYS_BITYPES_H

/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/socket.h> header file. */
#undef HAVE_SYS_SOCKET_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define if you have the <sys/uio.h> header file. */
#undef HAVE_SYS_UIO_H

/* Define to 1 if you have the <thread.h> header file. */
#undef HAVE_THREAD_H

/* Define to 1 if you have the `thread_policy_set' function. */
#undef HAVE_THREAD_POLICY_SET

/* Define to 1 if you have the `thr_yield' function. */
#undef HAVE_THR_YIELD

/* define to enable timing collection */
#undef HAVE_TIMING

/* Define to 1 if you have the `tsearch' function. */
#undef HAVE_TSEARCH

/* Define if uint16_t is supported by the C compiler */
#undef HAVE_UINT16_T

/* Define if uint32_t is supported by the C compiler */
#undef HAVE_UINT32_T

/* Define if uint64_t is supported by the C compiler */
#undef HAVE_UINT64_T

/* Define if uint8_t is supported by the C compiler */
#undef HAVE_UINT8_T

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the `usleep' function. */
#undef HAVE_USLEEP

/* Define to 1 if you have the <valgrind.h> header file. */
#undef HAVE_VALGRIND_H

/* Define to 1 if you have the <valgrind/memcheck.h> header file. */
#undef HAVE_VALGRIND_MEMCHECK_H

/* Define to 1 if you have the <valgrind/valgrind.h> header file. */
#undef HAVE_VALGRIND_VALGRIND_H

/* Define if we have va_copy */
#undef HAVE_VA_COPY

/* Define to 1 if you have the `vsnprintf' function. */
#undef HAVE_VSNPRINTF

/* Define to 1 if you have the `vsprintf' function. */
#undef HAVE_VSPRINTF

/* Define to 1 if you have the `yield' function. */
#undef HAVE_YIELD

/* Define to 1 if the system has the type `_Bool'. */
#undef HAVE__BOOL

/* define if the compiler defines __FUNCTION__ */
#undef HAVE__FUNCTION__

/* define if the compiler defines __func__ */
#undef HAVE__FUNC__

/* Define if we have __va_copy */
#undef HAVE___VA_COPY

/* Define which x86 cycle counter to use */
#undef LINUX86_CYCLE_CPUID_RDTSC32

/* Define which x86 cycle counter to use */
#undef LINUX86_CYCLE_CPUID_RDTSC64

/* Define which x86 cycle counter to use */
#undef LINUX86_CYCLE_RDTSC

/* Define which x86 cycle counter to use */
#undef LINUX86_CYCLE_RDTSCP

/* Name of installation directory intended for MVAPICH2 */
#undef MPICH2_LIBDIR

/* Define to perform a fine-grain nesting level check on exit */
#undef MPICH_DEBUG_FINE_GRAIN_NESTING

/* Define to enable checking of handles still allocated at MPI_Finalize */
#undef MPICH_DEBUG_HANDLEALLOC

/* Define to enable handle checking */
#undef MPICH_DEBUG_HANDLES

/* Define if each function exit should confirm memory arena correctness */
#undef MPICH_DEBUG_MEMARENA

/* Define to enable preinitialization of memory used by structures and unions
   */
#undef MPICH_DEBUG_MEMINIT

/* Define to enable mutex debugging */
#undef MPICH_DEBUG_MUTEX

/* Define to check nesting in mutexes */
#undef MPICH_DEBUG_MUTEXNESTING

/* Define to check nesting level on exit */
#undef MPICH_DEBUG_NESTING

/* define to enable error messages */
#undef MPICH_ERROR_MSG_LEVEL

/* Define as the name of the debugger support library */
#undef MPICH_INFODLL_LOC

/* Level of thread support selected at compile time */
#undef MPICH_THREAD_LEVEL

/* Define to enable channel rendezvous (Required by MVAPICH2). */
#undef MPIDI_CH3_CHANNEL_RNDV

/* Define to enable use of sequence numbers (Required by MVAPICH2). */
#undef MPID_USE_SEQUENCE_NUMBERS

/* Define as the MPI Datatype handle for MPI::COMPLEX */
#undef MPIR_CXX_COMPLEX_VALUE

/* Define as the MPI Datatype handle for MPI::DOUBLE_COMPLEX */
#undef MPIR_CXX_DOUBLE_COMPLEX_VALUE

/* Define as the MPI Datatype handle for MPI::LONG_DOUBLE_COMPLEX */
#undef MPIR_CXX_LONG_DOUBLE_COMPLEX_VALUE

/* C type to use for MPI_INTEGER16 */
#undef MPIR_INTEGER16_CTYPE

/* C type to use for MPI_INTEGER1 */
#undef MPIR_INTEGER1_CTYPE

/* C type to use for MPI_INTEGER2 */
#undef MPIR_INTEGER2_CTYPE

/* C type to use for MPI_INTEGER4 */
#undef MPIR_INTEGER4_CTYPE

/* C type to use for MPI_INTEGER8 */
#undef MPIR_INTEGER8_CTYPE

/* MPIR_Pint is a pointer-sized integer */
#undef MPIR_Pint

/* C type to use for MPI_REAL16 */
#undef MPIR_REAL16_CTYPE

/* C type to use for MPI_REAL4 */
#undef MPIR_REAL4_CTYPE

/* C type to use for MPI_REAL8 */
#undef MPIR_REAL8_CTYPE

/* MPIR_Upint is an unsigned pointer-sized integer */
#undef MPIR_Upint

/* Method used to allocate MPI object handles */
#undef MPIU_HANDLE_ALLOCATION_METHOD

/* Define to enable timing mutexes */
#undef MPIU_MUTEX_WAIT_TIME

/* Set to a type that can express the size of the entire address space */
#undef MPIU_SIZE_T

/* Method used to implement atomic updates and access */
#undef MPIU_THREAD_GRANULARITY

/* set to the name of the thread package */
#undef MPIU_THREAD_PACKAGE_NAME

/* Method used to implement refcount updates */
#undef MPIU_THREAD_REFCOUNT

/* define to disable reference counting predefined objects like MPI_COMM_WORLD
   */
#undef MPIU_THREAD_SUPPRESS_PREDEFINED_REFCOUNTS

/* Define to disable header caching. */
#undef MV2_DISABLE_HEADER_CACHING

/* Define if fdopen needs a declaration */
#undef NEEDS_FDOPEN_DECL

/* Define if mkstemp needs a declaration */
#undef NEEDS_MKSTEMP_DECL

/* define if pointers must be aligned on pointer boundaries */
#undef NEEDS_POINTER_ALIGNMENT_ADJUST

/* Define if putenv needs a declaration */
#undef NEEDS_PUTENV_DECL

/* Define if snprintf needs a declaration */
#undef NEEDS_SNPRINTF_DECL

/* Define if strdup needs a declaration */
#undef NEEDS_STRDUP_DECL

/* Define if sys/time.h is required to get timer definitions */
#undef NEEDS_SYS_TIME_H

/* Define if vsnprintf needs a declaration */
#undef NEEDS_VSNPRINTF_DECL

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to an expression that will result in an error checking mutex type.
   */
#undef PTHREAD_MUTEX_ERRORCHECK_VALUE

/* The size of `bool', as computed by sizeof. */
#undef SIZEOF_BOOL

/* The size of `char', as computed by sizeof. */
#undef SIZEOF_CHAR

/* The size of `Complex', as computed by sizeof. */
#undef SIZEOF_COMPLEX

/* The size of `double', as computed by sizeof. */
#undef SIZEOF_DOUBLE

/* The size of `DoubleComplex', as computed by sizeof. */
#undef SIZEOF_DOUBLECOMPLEX

/* The size of `double_int', as computed by sizeof. */
#undef SIZEOF_DOUBLE_INT

/* The size of `double _Complex', as computed by sizeof. */
#undef SIZEOF_DOUBLE__COMPLEX

/* Define size of PAC_TYPE_NAME */
#undef SIZEOF_F77_DOUBLE_PRECISION

/* Define size of PAC_TYPE_NAME */
#undef SIZEOF_F77_INTEGER

/* Define size of PAC_TYPE_NAME */
#undef SIZEOF_F77_REAL

/* The size of `float', as computed by sizeof. */
#undef SIZEOF_FLOAT

/* The size of `float_int', as computed by sizeof. */
#undef SIZEOF_FLOAT_INT

/* The size of `float _Complex', as computed by sizeof. */
#undef SIZEOF_FLOAT__COMPLEX

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* define if sizeof(int) = sizeof(MPI_Aint) */
#undef SIZEOF_INT_IS_AINT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `LongDoubleComplex', as computed by sizeof. */
#undef SIZEOF_LONGDOUBLECOMPLEX

/* The size of `long double', as computed by sizeof. */
#undef SIZEOF_LONG_DOUBLE

/* The size of `long_double_int', as computed by sizeof. */
#undef SIZEOF_LONG_DOUBLE_INT

/* The size of `long double _Complex', as computed by sizeof. */
#undef SIZEOF_LONG_DOUBLE__COMPLEX

/* The size of `long_int', as computed by sizeof. */
#undef SIZEOF_LONG_INT

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `MPIR_Bsend_data_t', as computed by sizeof. */
#undef SIZEOF_MPIR_BSEND_DATA_T

/* The size of `OPA_ptr_t', as computed by sizeof. */
#undef SIZEOF_OPA_PTR_T

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `short_int', as computed by sizeof. */
#undef SIZEOF_SHORT_INT

/* The size of `two_int', as computed by sizeof. */
#undef SIZEOF_TWO_INT

/* The size of `unsigned char', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_CHAR

/* The size of `unsigned int', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_INT

/* The size of `unsigned long', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_LONG

/* The size of `unsigned long long', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_LONG_LONG

/* The size of `unsigned short', as computed by sizeof. */
#undef SIZEOF_UNSIGNED_SHORT

/* The size of `void *', as computed by sizeof. */
#undef SIZEOF_VOID_P

/* The size of `wchar_t', as computed by sizeof. */
#undef SIZEOF_WCHAR_T

/* The size of `_Bool', as computed by sizeof. */
#undef SIZEOF__BOOL

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION

/* Define calling convention */
#undef STDCALL

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define if MPI_Aint should be used instead of void * for storing attribute
   values */
#undef USE_AINT_FOR_ATTRVAL

/* Define if alloca should be used if available */
#undef USE_ALLOCA

/* define to enable asynchronous communication progress */
#undef USE_ASYNC_PROGRESS

/* Define if assembly language atomic update macros should be used (if
   available) */
#undef USE_ATOMIC_UPDATES

/* Define if performing coverage tests */
#undef USE_COVERAGE

/* Define to enable logging macros */
#undef USE_DBG_LOGGING

/* Define if dynamic libraries are available and should be used */
#undef USE_DYNAMIC_LIBRARIES

/* Define if file should be used for name publisher */
#undef USE_FILE_FOR_NAMEPUB

/* Define to use ='s and spaces in the string utilities. */
#undef USE_HUMAN_READABLE_TOKENS

/* Define if ldap should be used for name publishing */
#undef USE_LDAP_FOR_NAMEPUB

/* define to choose logging library */
#undef USE_LOGGING

/* Define to enable memory tracing */
#undef USE_MEMORY_TRACING

/* Define if the NMPI names should use MPI instead of PMPI */
#undef USE_MPI_FOR_NMPI

/* Define if PMI2 API must be used */
#undef USE_PMI2_API

/* define to enable SMP/multi-core aware collectives */
#undef USE_SMP_COLLECTIVES

/* Multi-threaded implementation selected at compile time */
#undef USE_THREAD_IMPL

/* Define if tsearch requires char pointers */
#undef USE_TSEARCH_WITH_CHARP

/* Define if weak symbols should be used */
#undef USE_WEAK_SYMBOLS

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Define if words are little endian */
#undef WORDS_LITTLEENDIAN

/* Define if configure will not tell us, for universal binaries */
#undef WORDS_UNIVERSAL_ENDIAN

/* Define to enable the use of MVAPICH2 implmentation of collectives */
#undef _OSU_COLLECTIVES_

/* Define to enable MVAPICH2 customizations. */
#undef _OSU_MVAPICH_

/* Define to enable MVAPICH2-PSM customizations. */
#undef _OSU_PSM_

/* Define when using LiMIC2 */
#undef _SMP_LIMIC_

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#undef _UINT8_T

/* define if bool is a built-in type */
#undef bool

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#undef int16_t

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef int32_t

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#undef int64_t

/* Define to the type of a signed integer type of width exactly 8 bits if such
   a type exists and the standard includes do not define it. */
#undef int8_t

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#undef restrict
/* Work around a bug in Sun C++: it does not support _Restrict, even
   though the corresponding Sun C compiler does, which causes
   "#define restrict _Restrict" in the previous line.  Perhaps some future
   version of Sun C++ will work with _Restrict; if so, it'll probably
   define __RESTRICT, just as Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
#undef size_t

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#undef uint16_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#undef uint32_t

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#undef uint64_t

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#undef uint8_t

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#undef volatile

#endif
